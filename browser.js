var require = function (file, cwd) {
    var resolved = require.resolve(file, cwd || '/');
    var mod = require.modules[resolved];
    if (!mod) throw new Error(
        'Failed to resolve module ' + file + ', tried ' + resolved
    );
    var res = mod._cached ? mod._cached : mod();
    return res;
}

require.paths = [];
require.modules = {};
require.extensions = [".js",".coffee"];

require._core = {
    'assert': true,
    'events': true,
    'fs': true,
    'path': true,
    'vm': true
};

require.resolve = (function () {
    return function (x, cwd) {
        if (!cwd) cwd = '/';
        
        if (require._core[x]) return x;
        var path = require.modules.path();
        cwd = path.resolve('/', cwd);
        var y = cwd || '/';
        
        if (x.match(/^(?:\.\.?\/|\/)/)) {
            var m = loadAsFileSync(path.resolve(y, x))
                || loadAsDirectorySync(path.resolve(y, x));
            if (m) return m;
        }
        
        var n = loadNodeModulesSync(x, y);
        if (n) return n;
        
        throw new Error("Cannot find module '" + x + "'");
        
        function loadAsFileSync (x) {
            if (require.modules[x]) {
                return x;
            }
            
            for (var i = 0; i < require.extensions.length; i++) {
                var ext = require.extensions[i];
                if (require.modules[x + ext]) return x + ext;
            }
        }
        
        function loadAsDirectorySync (x) {
            x = x.replace(/\/+$/, '');
            var pkgfile = x + '/package.json';
            if (require.modules[pkgfile]) {
                var pkg = require.modules[pkgfile]();
                var b = pkg.browserify;
                if (typeof b === 'object' && b.main) {
                    var m = loadAsFileSync(path.resolve(x, b.main));
                    if (m) return m;
                }
                else if (typeof b === 'string') {
                    var m = loadAsFileSync(path.resolve(x, b));
                    if (m) return m;
                }
                else if (pkg.main) {
                    var m = loadAsFileSync(path.resolve(x, pkg.main));
                    if (m) return m;
                }
            }
            
            return loadAsFileSync(x + '/index');
        }
        
        function loadNodeModulesSync (x, start) {
            var dirs = nodeModulesPathsSync(start);
            for (var i = 0; i < dirs.length; i++) {
                var dir = dirs[i];
                var m = loadAsFileSync(dir + '/' + x);
                if (m) return m;
                var n = loadAsDirectorySync(dir + '/' + x);
                if (n) return n;
            }
            
            var m = loadAsFileSync(x);
            if (m) return m;
        }
        
        function nodeModulesPathsSync (start) {
            var parts;
            if (start === '/') parts = [ '' ];
            else parts = path.normalize(start).split('/');
            
            var dirs = [];
            for (var i = parts.length - 1; i >= 0; i--) {
                if (parts[i] === 'node_modules') continue;
                var dir = parts.slice(0, i + 1).join('/') + '/node_modules';
                dirs.push(dir);
            }
            
            return dirs;
        }
    };
})();

require.alias = function (from, to) {
    var path = require.modules.path();
    var res = null;
    try {
        res = require.resolve(from + '/package.json', '/');
    }
    catch (err) {
        res = require.resolve(from, '/');
    }
    var basedir = path.dirname(res);
    
    var keys = (Object.keys || function (obj) {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    })(require.modules);
    
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (key.slice(0, basedir.length + 1) === basedir + '/') {
            var f = key.slice(basedir.length);
            require.modules[to + f] = require.modules[basedir + f];
        }
        else if (key === basedir) {
            require.modules[to] = require.modules[basedir];
        }
    }
};

require.define = function (filename, fn) {
    var dirname = require._core[filename]
        ? ''
        : require.modules.path().dirname(filename)
    ;
    
    var require_ = function (file) {
        return require(file, dirname)
    };
    require_.resolve = function (name) {
        return require.resolve(name, dirname);
    };
    require_.modules = require.modules;
    require_.define = require.define;
    var module_ = { exports : {} };
    
    require.modules[filename] = function () {
        require.modules[filename]._cached = module_.exports;
        fn.call(
            module_.exports,
            require_,
            module_,
            module_.exports,
            dirname,
            filename
        );
        require.modules[filename]._cached = module_.exports;
        return module_.exports;
    };
};

if (typeof process === 'undefined') process = {};

if (!process.nextTick) process.nextTick = (function () {
    var queue = [];
    var canPost = typeof window !== 'undefined'
        && window.postMessage && window.addEventListener
    ;
    
    if (canPost) {
        window.addEventListener('message', function (ev) {
            if (ev.source === window && ev.data === 'browserify-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);
    }
    
    return function (fn) {
        if (canPost) {
            queue.push(fn);
            window.postMessage('browserify-tick', '*');
        }
        else setTimeout(fn, 0);
    };
})();

if (!process.title) process.title = 'browser';

if (!process.binding) process.binding = function (name) {
    if (name === 'evals') return require('vm')
    else throw new Error('No such module')
};

if (!process.cwd) process.cwd = function () { return '.' };

if (!process.env) process.env = {};
if (!process.argv) process.argv = [];

require.define("path", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "function filter (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (fn(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length; i >= 0; i--) {\n    var last = parts[i];\n    if (last == '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Regex to split a filename into [*, dir, basename, ext]\n// posix version\nvar splitPathRe = /^(.+\\/(?!$)|\\/)?((?:.+?)?(\\.[^.]*)?)$/;\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\nvar resolvedPath = '',\n    resolvedAbsolute = false;\n\nfor (var i = arguments.length; i >= -1 && !resolvedAbsolute; i--) {\n  var path = (i >= 0)\n      ? arguments[i]\n      : process.cwd();\n\n  // Skip empty and invalid entries\n  if (typeof path !== 'string' || !path) {\n    continue;\n  }\n\n  resolvedPath = path + '/' + resolvedPath;\n  resolvedAbsolute = path.charAt(0) === '/';\n}\n\n// At this point the path should be resolved to a full absolute path, but\n// handle relative paths to be safe (might happen when process.cwd() fails)\n\n// Normalize the path\nresolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\nvar isAbsolute = path.charAt(0) === '/',\n    trailingSlash = path.slice(-1) === '/';\n\n// Normalize the path\npath = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n  \n  return (isAbsolute ? '/' : '') + path;\n};\n\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    return p && typeof p === 'string';\n  }).join('/'));\n};\n\n\nexports.dirname = function(path) {\n  var dir = splitPathRe.exec(path)[1] || '';\n  var isWindows = false;\n  if (!dir) {\n    // No dirname\n    return '.';\n  } else if (dir.length === 1 ||\n      (isWindows && dir.length <= 3 && dir.charAt(1) === ':')) {\n    // It is just a slash or a drive letter with a slash\n    return dir;\n  } else {\n    // It is a full dirname, strip trailing slash\n    return dir.substring(0, dir.length - 1);\n  }\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPathRe.exec(path)[2] || '';\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPathRe.exec(path)[3] || '';\n};\n\n//@ sourceURL=path"
));

require.define("/jsmm/index.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nvar jsmm = {};\n\njsmm.verbose = false;\n\njsmm.Context = function() { return this.init.apply(this, arguments); };\njsmm.yy = {};\njsmm.yy.Program = function() { return this.build.apply(this, arguments); };\njsmm.yy.StatementList = function() { return this.build.apply(this, arguments); };\njsmm.yy.CommonSimpleStatement = function() { return this.build.apply(this, arguments); };\njsmm.yy.PostfixStatement = function() { return this.build.apply(this, arguments); };\njsmm.yy.AssignmentStatement = function() { return this.build.apply(this, arguments); };\njsmm.yy.VarStatement = function() { return this.build.apply(this, arguments); };\njsmm.yy.VarItem = function() { return this.build.apply(this, arguments); };\njsmm.yy.ReturnStatement = function() { return this.build.apply(this, arguments); };\njsmm.yy.BinaryExpression = function() { return this.build.apply(this, arguments); };\njsmm.yy.UnaryExpression = function() { return this.build.apply(this, arguments); };\njsmm.yy.NumberLiteral = function() { return this.build.apply(this, arguments); };\njsmm.yy.StringLiteral = function() { return this.build.apply(this, arguments); };\njsmm.yy.BooleanLiteral = function() { return this.build.apply(this, arguments); };\njsmm.yy.NameIdentifier = function() { return this.build.apply(this, arguments); };\njsmm.yy.ObjectIdentifier = function() { return this.build.apply(this, arguments); };\njsmm.yy.ArrayIdentifier = function() { return this.build.apply(this, arguments); };\njsmm.yy.FunctionCall = function() { return this.build.apply(this, arguments); };\njsmm.yy.CallStatement = function() { return this.build.apply(this, arguments); };\njsmm.yy.IfBlock = function() { return this.build.apply(this, arguments); };\njsmm.yy.ElseIfBlock = function() { return this.build.apply(this, arguments); };\njsmm.yy.ElseBlock = function() { return this.build.apply(this, arguments); };\njsmm.yy.WhileBlock = function() { return this.build.apply(this, arguments); };\njsmm.yy.ForBlock = function() { return this.build.apply(this, arguments); };\njsmm.yy.FunctionDeclaration = function() { return this.build.apply(this, arguments); };\n\njsmm.Context.prototype = {\n\tinit: function(code) {\n\t\tthis.genId = 0;\n\t\tthis.elements = [];\n\t\tthis.code = code;\n\t\tthis.program = null;\n\t\tthis.elementsByType = { Program: [], StatementList: [], CommonSimpleStatement: [], PostfixStatement: [],\n\t\t\tAssignmentStatement: [], VarStatement: [], VarItem: [], ReturnStatement: [], BinaryExpression: [],\n\t\t\tUnaryExpression: [], NumberLiteral: [], StringLiteral: [], BooleanLiteral: [], NameIdentifier: [],\n\t\t\tObjectIdentifier: [], ArrayIdentifier: [], FunctionCall: [], CallStatement: [], IfBlock: [], ElseIfBlock: [],\n\t\t\tElseBlock: [], WhileBlock: [], ForBlock: [], FunctionDeclaration: []\n\t\t};\n\t},\n\tgetNewId: function() {\n\t\treturn this.genId++;\n\t}\n};\n\njsmm.addCommonElementMethods = function(type, element) {\n\telement.build = function(_$) {\n\t\tthis.context = jsmm.yy.context;\n\t\tthis.id = this.context.getNewId();\n\t\tthis.context.elements[this.id] = this;\n\t\tthis.context.elementsByType[type].push(this);\n\t\tthis.type = type;\n\t\tthis.startPos = {line: _$.first_line, column: _$.first_column};\n\t\tthis.endPos = {line: _$.last_line, column: _$.last_column};\n\t\tthis.text = jsmm.parser.lexer.yytext;\n\t\tthis.init.apply(this, [].slice.call(arguments, 1));\n\t};\n\treturn element;\n};\n\njsmm.yy.Program.prototype = jsmm.addCommonElementMethods('Program', {\n\tinit: function(statementList) {\n\t\tthis.statementList = statementList;\n\t},\n\tgetCode: function() {\n\t\treturn this.statementList.getCode();\n\t},\n\tgetFunction: function(scope) {\n\t\t/*jshint evil:true*/\n\t\tvar args = [jsmm];\n\t\tvar output = 'new function() {';\n\t\toutput += 'return function(jsmm';\n\t\tfor (var name in scope) {\n\t\t\toutput += ', ' + name;\n\t\t\targs.push(scope[name]);\n\t\t}\n\t\toutput += ') { return function() { \\n';\n\t\toutput += this.statementList.getCode() + 'return; }; }; }';\n\t\t//console.log(output);\n\t\treturn eval(output).apply(null, args);\n\t}\n});\n\njsmm.yy.StatementList.prototype = jsmm.addCommonElementMethods('StatementList', {\n\tinit: function() {\n\t\tthis.statements = [];\n\t},\n\taddStatement: function(statement) {\n\t\tthis.statements.push(statement);\n\t},\n\tgetCode: function() {\n\t\tvar output = \"\";\n\t\tfor (var i=0; i<this.statements.length; i++) {\n\t\t\toutput += this.statements[i].getCode() + \"\\n\";\n\t\t}\n\t\treturn output;\n\t},\n\tgetChildren: function() {\n\t\treturn this.statements;\n\t}\n});\n\njsmm.yy.CommonSimpleStatement.prototype = jsmm.addCommonElementMethods('CommonSimpleStatement', {\n\tinit: function(statement) {\n\t\tthis.statement = statement;\n\t},\n\tgetCode: function() {\n\t\treturn this.statement.getCode() + \";\";\n\t},\n\tgetChildren: function() {\n\t\treturn [this.statement];\n\t}\n});\n\njsmm.yy.PostfixStatement.prototype = jsmm.addCommonElementMethods('PostfixStatement', {\n\tinit: function(identifier, symbol) {\n\t\tthis.identifier = identifier;\n\t\tthis.symbol = symbol;\n\t},\n\tgetCode: function() {\n\t\treturn this.identifier.getCode() + this.symbol;\n\t},\n\tgetChildren: function() {\n\t\treturn [this.identifier];\n\t}\n});\n\njsmm.yy.AssignmentStatement.prototype = jsmm.addCommonElementMethods('AssignmentStatement', {\n\tinit: function(identifier, symbol, expression) {\n\t\tthis.identifier = identifier;\n\t\tthis.symbol = symbol;\n\t\tthis.expression = expression;\n\t},\n\tgetCode: function() {\n\t\treturn this.identifier.getCode() + \" \" + this.symbol + \" \" + this.expression.getCode();\n\t},\n\tgetChildren: function() {\n\t\treturn [this.identifier, this.expression];\n\t}\n});\n\njsmm.yy.VarStatement.prototype = jsmm.addCommonElementMethods('VarStatement', {\n\tinit: function() {\n\t\tthis.items = [];\n\t},\n\taddVarItem: function(item) {\n\t\tthis.items.push(item);\n\t},\n\tgetCode: function() {\n\t\tvar output = \"var \" + this.items[0].getCode();\n\t\tfor (var i=1; i<this.items.length; i++) {\n\t\t\toutput += \", \" + this.items[i].getCode();\n\t\t}\n\t\treturn output;\n\t},\n\tgetChildren: function() {\n\t\treturn this.items;\n\t}\n});\n\njsmm.yy.VarItem.prototype = jsmm.addCommonElementMethods('VarItem', {\n\tinit: function(name, assignment) {\n\t\tthis.name = name;\n\t\tthis.assignment = assignment;\n\t},\n\tgetCode: function() {\n\t\tif (this.assignment === null) {\n\t\t\treturn this.name;\n\t\t} else {\n\t\t\treturn this.assignment.getCode();\n\t\t}\n\t},\n\tgetChildren: function() {\n\t\treturn [this.assignment];\n\t}\n});\n\njsmm.yy.ReturnStatement.prototype = jsmm.addCommonElementMethods('ReturnStatement', {\n\tinit: function(expression) {\n\t\tthis.expression = expression;\n\t},\n\tgetCode: function() {\n\t\tif (this.expression === null) {\n\t\t\treturn \"return;\";\n\t\t} else {\n\t\t\treturn \"return \" + this.expression.getCode() + \";\";\n\t\t}\n\t}\n});\n\njsmm.yy.BinaryExpression.prototype = jsmm.addCommonElementMethods('BinaryExpression', {\n\tinit: function(expression1, symbol, expression2) {\n\t\tthis.expression1 = expression1;\n\t\tthis.symbol = symbol;\n\t\tthis.expression2 = expression2;\n\t},\n\tgetCode: function() {\n\t\treturn \"(\" + this.expression1.getCode() + this.symbol + this.expression2.getCode() + \")\";\n\t}\n});\n\njsmm.yy.UnaryExpression.prototype = jsmm.addCommonElementMethods('UnaryExpression', {\n\tinit: function(symbol, expression) {\n\t\tthis.symbol = symbol;\n\t\tthis.expression = expression;\n\t},\n\tgetCode: function() {\n\t\treturn \"(\" + this.symbol + this.expression.getCode() + \")\";\n\t}\n});\n\njsmm.yy.NumberLiteral.prototype = jsmm.addCommonElementMethods('NumberLiteral', {\n\tinit: function(number) {\n\t\tthis.number = parseFloat(number);\n\t},\n\tgetCode: function() {\n\t\treturn this.number;\n\t}\n});\n\njsmm.yy.StringLiteral.prototype = jsmm.addCommonElementMethods('StringLiteral', {\n\tinit: function(str) {\n\t\tthis.str = JSON.parse(str);\n\t},\n\tgetCode: function() {\n\t\treturn JSON.stringify(this.str);\n\t}\n});\n\njsmm.yy.BooleanLiteral.prototype = jsmm.addCommonElementMethods('BooleanLiteral', {\n\tinit: function(bool) {\n\t\tthis.bool = bool;\n\t},\n\tgetCode: function() {\n\t\treturn this.bool ? \"true\" : \"false\";\n\t}\n});\n\njsmm.yy.NameIdentifier.prototype = jsmm.addCommonElementMethods('NameIdentifier', {\n\tinit: function(name) {\n\t\tthis.name = name;\n\t},\n\tgetCode: function() {\n\t\treturn this.name;\n\t}\n});\n\njsmm.yy.ObjectIdentifier.prototype = jsmm.addCommonElementMethods('ObjectIdentifier', {\n\tinit: function(identifier, prop) {\n\t\tthis.identifier = identifier;\n\t\tthis.prop = prop;\n\t},\n\tgetCode: function() {\n\t\treturn this.identifier.getCode() + \".\" + this.prop;\n\t}\n});\n\njsmm.yy.ArrayIdentifier.prototype = jsmm.addCommonElementMethods('ArrayIdentifier', {\n\tinit: function(identifier, expression) {\n\t\tthis.identifier = identifier;\n\t\tthis.expression = expression;\n\t},\n\tgetCode: function() {\n\t\treturn this.identifier.getCode() + \"[\" + this.expression.getCode() + \"]\";\n\t}\n});\n\njsmm.yy.FunctionCall.prototype = jsmm.addCommonElementMethods('FunctionCall', {\n\tinit: function(identifier, expressionArgs) {\n\t\tthis.identifier = identifier;\n\t\tthis.expressionArgs = expressionArgs;\n\t},\n\tgetCode: function() {\n\t\tvar output = this.identifier.getCode() + \"(\";\n\t\tif (this.expressionArgs.length > 0) output += this.expressionArgs[0].getCode();\n\t\tfor (var i=1; i<this.expressionArgs.length; i++) {\n\t\t\toutput += \", \" + this.expressionArgs[i].getCode();\n\t\t}\n\t\treturn output + \")\";\n\t}\n});\n\njsmm.yy.CallStatement.prototype = jsmm.addCommonElementMethods('CallStatement', {\n\tinit: function(functionCall) {\n\t\tthis.functionCall = functionCall;\n\t},\n\tgetCode: function() {\n\t\treturn this.functionCall.getCode();\n\t}\n});\n\njsmm.yy.IfBlock.prototype = jsmm.addCommonElementMethods('IfBlock', {\n\tinit: function(expression, statementList, elseBlock) {\n\t\tthis.expression = expression;\n\t\tthis.statementList = statementList;\n\t\tthis.elseBlock = elseBlock;\n\t},\n\tgetCode: function() {\n\t\tvar output = \"if (\" + this.expression.getCode() + \") {\\n\" + this.statementList.getCode() + \"}\";\n\t\tif (this.elseBlock !== null) {\n\t\t\toutput += this.elseBlock.getCode();\n\t\t}\n\t\treturn output;\n\t}\n});\n\njsmm.yy.ElseIfBlock.prototype = jsmm.addCommonElementMethods('ElseIfBlock', {\n\tinit: function(ifBlock) {\n\t\tthis.ifBlock = ifBlock;\n\t},\n\tgetCode: function() {\n\t\treturn \" else \" + this.ifBlock.getCode();\n\t}\n});\n\njsmm.yy.ElseBlock.prototype = jsmm.addCommonElementMethods('ElseBlock', {\n\tinit: function(statementList) {\n\t\tthis.statementList = statementList;\n\t},\n\tgetCode: function() {\n\t\treturn \" else {\\n\" + this.statementList.getCode() + \"}\";\n\t}\n});\n\njsmm.yy.WhileBlock.prototype = jsmm.addCommonElementMethods('WhileBlock', {\n\tinit: function(expression, statementList) {\n\t\tthis.expression = expression;\n\t\tthis.statementList = statementList;\n\t},\n\tgetCode: function() {\n\t\treturn \"while (\" + this.expression.getCode() + \") {\\n\" + this.statementList.getCode() + \"}\";\n\t}\n});\n\njsmm.yy.ForBlock.prototype = jsmm.addCommonElementMethods('ForBlock', {\n\tinit: function(statement1, expression, statement2, statementList) {\n\t\tthis.statement1 = statement1;\n\t\tthis.expression = expression;\n\t\tthis.statement2 = statement2;\n\t\tthis.statementList = statementList;\n\t},\n\tgetCode: function() {\n\t\tvar output = \"for (\" + this.statement1.getCode() + \";\" + this.expression.getCode() + \";\";\n\t\toutput += this.statement2.getCode() + \") {\\n\" + this.statementList.getCode() + \"}\";\n\t\treturn output;\n\t}\n});\n\njsmm.yy.FunctionDeclaration.prototype = jsmm.addCommonElementMethods('FunctionDeclaration', {\n\tinit: function(name, nameArgs, statementList, startPos, endPos) {\n\t\tthis.name = name;\n\t\tthis.nameArgs = nameArgs;\n\t\tthis.statementList = statementList;\n\t\tthis.startPos = {line: startPos.first_line, column: startPos.first_column};\n\t\tthis.endPos = {line: endPos.last_line, column: endPos.last_column};\n\t},\n\tgetArgList: function() {\n\t\tvar output = \"(\";\n\t\tif (this.nameArgs.length > 0) output += this.nameArgs[0];\n\t\tfor (var i=1; i<this.nameArgs.length; i++) {\n\t\t\toutput += ', ' + this.nameArgs[i];\n\t\t}\n\t\treturn output + \")\";\n\t},\n\tgetCode: function() {\n\t\tvar output = \"function \" + this.name + this.getArgList() + \"{\\n\" + this.statementList.getCode() + \"}\";\n\t\treturn output;\n\t}\n});\n\n// function used by the parser to throw errors\n// also used below by catching tokenizer errors\njsmm.yy.parseError = function(errStr, hash) {\n\thash = hash || {};\n\tvar token = hash.token || '';\n\tvar expected = hash.expected || [];\n\tvar pos = {\n\t\tstartPos: {\n\t\t\tline: jsmm.parser.lexer.yylloc.first_line,\n\t\t\tcolumn: jsmm.parser.lexer.yylloc.first_column\n\t\t}\n\t};\n\t\n\t// if there are no newlines, give a range instead of a single position\n\tif (hash.text.match(/\\n/) === null) {\n\t\tpos.endPos = {line: pos.startPos.line, column: pos.startPos.column + hash.text.length};\n\t}\n\t\n\t// entries are in the form \"'FOR'\", remove the extra quotes\n\ttoken = token.replace(/[']/g, \"\");\n\tfor (var i=0; i<expected.length; i++) {\n\t\texpected[i] = expected[i].replace(/[']/g, \"\");\n\t}\n\t\n\tvar makeNear = function(text, f, near) {\n\t\tif (text.replace(/\\s*/, '').length > 0) {\n\t\t\treturn (near || ' near ') + f(text);\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t};\n\t\n\t//console.log(hash.text);\n\tvar suggestionError = function(suggestion) {\n\t\tthrow new jsmm.msg.Error(pos, function(f) {\n\t\t\treturn 'Invalid syntax encountered' + makeNear(hash.text, f) + ', perhaps there is a ' + f(suggestion) + ' missing';\n\t\t}, errStr);\n\t};\n\t\n\tif (token === \"RESERVED\") {\n\t\t// special case: passing on the information that the word is reserved\n\t\tthrow new jsmm.msg.Error(pos, function(f) { return 'Unfortunately ' + f(hash.text) + ' is a reserved word, which means you cannot use it as a variable name'; }, errStr);\n\t} else if (hash.token === null) {\n\t\t// lexer error\n\t\tpos = {startPos: {line: hash.line+1, column: 0}};\n\t\tthrow new jsmm.msg.Error(pos, 'Invalid syntax encountered', errStr);\n\t} else if (expected.length === 1 && expected[0] === 'NEWLINE') {\n\t\tthrow new jsmm.msg.Error(pos, function(f) {\n\t\t\treturn 'Invalid syntax encountered, perhaps some code' + makeNear(hash.text, f) + ' should be put on a new line.';\n\t\t}, errStr);\n\t} else if (expected.length === 1) {\n\t\t// if only one thing can be expected, pass it on\n\t\tif (expected[0] === 'NAME') {\n\t\t\texpected[0] = 'variable name';\n\t\t}\n\t\tsuggestionError(expected[0]);\n\t} else if (expected.indexOf(\";\") >= 0 && token === \"NEWLINE\") {\n\t\t// ; expected before of newline is usually forgotten\n\t\tsuggestionError(';');\n\t} else if (expected.indexOf(\"}\") >= 0 && [\"FUNCTION\", \"EOF\"].indexOf(token) >= 0) {\n\t\t// } expected before function declaration or eof is usually forgotten\n\t\tsuggestionError('}');\n\t} else if (expected.indexOf(\")\") >= 0 && [\"{\", \";\", \"NEWLINE\"].indexOf(token) >= 0) {\n\t\t// ) expected before { or ; is usually forgotten\n\t\tsuggestionError(')');\n\t} else {\n\t\tthrow new jsmm.msg.Error(pos, function(f) { return 'Invalid syntax encountered' + makeNear(hash.text, f); }, errStr);\n\t}\n};\n\njsmm.parse = function(input) {\n\tjsmm.yy.context = new jsmm.Context(input);\n\tjsmm.yy.context.program = jsmm.parser.parse(input + \"\\n\");\n\treturn jsmm.yy.context;\n};\n\njsmm.parser = require('./jsmmparser').parser;\njsmm.parser.yy = jsmm.yy;\n\nrequire('./jsmm.dot')(jsmm);\nrequire('./jsmm.safe')(jsmm);\nrequire('./jsmm.step')(jsmm);\nrequire('./jsmm.browser')(jsmm);\nrequire('./jsmm.test')(jsmm);\n\nmodule.exports = jsmm;\n//@ sourceURL=/jsmm/index.js"
));

require.define("/jsmm/jsmmparser.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/* Jison generated parser */\nvar jsmmparser = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"programStatementList\":4,\"EOF\":5,\"NEWLINE\":6,\"commonStatement\":7,\"functionDeclaration\":8,\"statementList\":9,\"simpleStatement\":10,\";\":11,\"blockStatement\":12,\"returnStatement\":13,\"assignmentStatement\":14,\"varStatement\":15,\"callStatement\":16,\"identExpression\":17,\"++\":18,\"=\":19,\"expression\":20,\"+=\":21,\"VAR\":22,\"varList\":23,\"varListItem\":24,\",\":25,\"NAME\":26,\"RETURN\":27,\"andExpression\":28,\"||\":29,\"relationalExpression\":30,\"&&\":31,\"addExpression\":32,\"==\":33,\"multExpression\":34,\"+\":35,\"unaryExpression\":36,\"*\":37,\"primaryExpression\":38,\"!\":39,\"NUMBER\":40,\"STRING\":41,\"TRUE\":42,\"FALSE\":43,\"callExpression\":44,\"(\":45,\")\":46,\".\":47,\"[\":48,\"]\":49,\"callArguments\":50,\"ifBlock\":51,\"whileBlock\":52,\"forBlock\":53,\"IF\":54,\"{\":55,\"}\":56,\"elseBlock\":57,\"ELSE\":58,\"WHILE\":59,\"FOR\":60,\"FUNCTION\":61,\"functionArguments\":62,\"reserved\":63,\"RESERVED\":64,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",6:\"NEWLINE\",11:\";\",18:\"++\",19:\"=\",21:\"+=\",22:\"VAR\",25:\",\",26:\"NAME\",27:\"RETURN\",29:\"||\",31:\"&&\",33:\"==\",35:\"+\",37:\"*\",39:\"!\",40:\"NUMBER\",41:\"STRING\",42:\"TRUE\",43:\"FALSE\",45:\"(\",46:\")\",47:\".\",48:\"[\",49:\"]\",54:\"IF\",55:\"{\",56:\"}\",58:\"ELSE\",59:\"WHILE\",60:\"FOR\",61:\"FUNCTION\",64:\"RESERVED\"},\nproductions_: [0,[3,2],[3,3],[4,0],[4,3],[4,3],[9,0],[9,3],[7,2],[7,1],[7,1],[10,1],[10,1],[10,1],[10,2],[14,3],[14,3],[15,2],[23,1],[23,3],[24,1],[24,3],[13,2],[13,3],[20,1],[20,3],[28,1],[28,3],[30,1],[30,3],[32,1],[32,3],[34,1],[34,3],[36,1],[36,2],[36,2],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,3],[17,1],[17,3],[17,4],[44,3],[44,4],[50,1],[50,3],[16,1],[12,1],[12,1],[12,1],[51,9],[57,0],[57,2],[57,5],[52,8],[53,12],[8,8],[8,9],[62,1],[62,3],[63,1]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: this.$ = new yy.Program(this._$, $$[$0-1]); return this.$; \nbreak;\ncase 2: this.$ = new yy.Program(this._$, $$[$0-1]); return this.$; \nbreak;\ncase 3: this.$ = new yy.StatementList(this._$); \nbreak;\ncase 4: this.$ = $$[$0-2]; this.$.addStatement($$[$0-1]); \nbreak;\ncase 5: this.$ = $$[$0-2]; this.$.addStatement($$[$0-1]); \nbreak;\ncase 6: this.$ = new yy.StatementList(this._$); \nbreak;\ncase 7: this.$ = $$[$0-2]; this.$.addStatement($$[$0-1]); \nbreak;\ncase 8: this.$ = new yy.CommonSimpleStatement(this._$, $$[$0-1]); \nbreak;\ncase 14: this.$ = new yy.PostfixStatement(this._$, $$[$0-1], $$[$0]); \nbreak;\ncase 15: this.$ = new yy.AssignmentStatement(this._$, $$[$0-2], \"=\", $$[$0]); \nbreak;\ncase 16: this.$ = new yy.AssignmentStatement(this._$, $$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 17: this.$ = $$[$0]; \nbreak;\ncase 18: this.$ = new yy.VarStatement(this._$); this.$.addVarItem($$[$0]); \nbreak;\ncase 19: this.$ = $$[$0-2]; this.$.addVarItem($$[$0]); \nbreak;\ncase 20: this.$ = new yy.VarItem(this._$, $$[$0], null); \nbreak;\ncase 21:\n\t\t\tthis.$ = new yy.VarItem(this._$, $$[$0-2], new yy.AssignmentStatement(this._$, new yy.NameIdentifier(_$[$0-2], $$[$0-2]), \"=\", $$[$0]));\n\t\t\nbreak;\ncase 22: this.$ = new yy.ReturnStatement(this._$, null); \nbreak;\ncase 23: this.$ = new yy.ReturnStatement(this._$, $$[$0-1]); \nbreak;\ncase 25: this.$ = new yy.BinaryExpression(this._$, $$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 27: this.$ = new yy.BinaryExpression(this._$, $$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 29: this.$ = new yy.BinaryExpression(this._$, $$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 31: this.$ = new yy.BinaryExpression(this._$, $$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 33: this.$ = new yy.BinaryExpression(this._$, $$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 35: this.$ = new yy.UnaryExpression(this._$, $$[$0-1], $$[$0]); \nbreak;\ncase 36: this.$ = new yy.UnaryExpression(this._$, $$[$0-1], $$[$0]); \nbreak;\ncase 38: this.$ = new yy.NumberLiteral(this._$, $$[$0]); \nbreak;\ncase 39: this.$ = new yy.StringLiteral(this._$, $$[$0]); \nbreak;\ncase 40: this.$ = new yy.BooleanLiteral(this._$, true); \nbreak;\ncase 41: this.$ = new yy.BooleanLiteral(this._$, false); \nbreak;\ncase 43: this.$ = $$[$0-1]; \nbreak;\ncase 44: this.$ = new yy.NameIdentifier(this._$, $$[$0]); \nbreak;\ncase 45: this.$ = new yy.ObjectIdentifier(this._$, $$[$0-2], $$[$0]); \nbreak;\ncase 46: this.$ = new yy.ArrayIdentifier(this._$, $$[$0-3], $$[$0-1]); \nbreak;\ncase 47: this.$ = new yy.FunctionCall(this._$, $$[$0-2], []); \nbreak;\ncase 48: this.$ = new yy.FunctionCall(this._$, $$[$0-3], $$[$0-1]); \nbreak;\ncase 49: this.$ = [$$[$0]]; \nbreak;\ncase 50: this.$ = $$[$0-2]; this.$.push($$[$0]); \nbreak;\ncase 51: this.$ = new yy.CallStatement(this._$, $$[$0]); \nbreak;\ncase 55: this.$ = new yy.IfBlock(this._$, $$[$0-6], $$[$0-2], $$[$0]); \nbreak;\ncase 56: this.$ = null; \nbreak;\ncase 57: this.$ = new yy.ElseIfBlock(this._$, $$[$0]); \nbreak;\ncase 58: this.$ = new yy.ElseBlock(this._$, $$[$0-1]); \nbreak;\ncase 59: this.$ = new yy.WhileBlock(this._$, $$[$0-5], $$[$0-1]); \nbreak;\ncase 60: this.$ = new yy.ForBlock(this._$, $$[$0-9], $$[$0-7], $$[$0-5], $$[$0-1]); \nbreak;\ncase 61: this.$ = new yy.FunctionDeclaration(this._$, $$[$0-6], [], $$[$0-1], _$[$0-6], _$[$0-4]); \nbreak;\ncase 62: this.$ = new yy.FunctionDeclaration(this._$, $$[$0-7], $$[$0-5], $$[$0-1], _$[$0-7], _$[$0-4]); \nbreak;\ncase 63: this.$ = [$$[$0]]; \nbreak;\ncase 64: this.$ = $$[$0-2]; this.$.push($$[$0]); \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,3],6:[1,3],22:[2,3],26:[2,3],27:[2,3],54:[2,3],59:[2,3],60:[2,3],61:[2,3]},{1:[3]},{5:[1,4],7:5,8:6,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],59:[1,23],60:[1,24],61:[1,10]},{4:25,5:[2,3],22:[2,3],26:[2,3],27:[2,3],54:[2,3],59:[2,3],60:[2,3],61:[2,3]},{1:[2,1]},{6:[1,26]},{6:[1,27]},{11:[1,28]},{6:[2,9]},{6:[2,10]},{26:[1,29]},{11:[2,11],46:[2,11]},{11:[2,12],46:[2,12]},{11:[2,13],46:[2,13]},{18:[1,30],19:[1,31],21:[1,32],45:[1,35],47:[1,33],48:[1,34]},{6:[2,52]},{6:[2,53]},{6:[2,54]},{11:[1,36],17:46,20:37,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{23:53,24:54,26:[1,55]},{11:[2,51],46:[2,51]},{11:[2,44],18:[2,44],19:[2,44],21:[2,44],25:[2,44],29:[2,44],31:[2,44],33:[2,44],35:[2,44],37:[2,44],45:[2,44],46:[2,44],47:[2,44],48:[2,44],49:[2,44]},{45:[1,56]},{45:[1,57]},{45:[1,58]},{5:[1,59],7:5,8:6,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],59:[1,23],60:[1,24],61:[1,10]},{5:[2,4],22:[2,4],26:[2,4],27:[2,4],54:[2,4],59:[2,4],60:[2,4],61:[2,4]},{5:[2,5],22:[2,5],26:[2,5],27:[2,5],54:[2,5],59:[2,5],60:[2,5],61:[2,5]},{6:[2,8]},{45:[1,60]},{11:[2,14],46:[2,14]},{17:46,20:61,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,20:62,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{26:[1,63]},{17:46,20:64,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,20:67,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52],46:[1,65],50:66},{6:[2,22]},{11:[1,68],29:[1,69]},{11:[2,24],25:[2,24],29:[2,24],31:[1,70],46:[2,24],49:[2,24]},{11:[2,26],25:[2,26],29:[2,26],31:[2,26],33:[1,71],46:[2,26],49:[2,26]},{11:[2,28],25:[2,28],29:[2,28],31:[2,28],33:[2,28],35:[1,72],46:[2,28],49:[2,28]},{11:[2,30],25:[2,30],29:[2,30],31:[2,30],33:[2,30],35:[2,30],37:[1,73],46:[2,30],49:[2,30]},{11:[2,32],25:[2,32],29:[2,32],31:[2,32],33:[2,32],35:[2,32],37:[2,32],46:[2,32],49:[2,32]},{11:[2,34],25:[2,34],29:[2,34],31:[2,34],33:[2,34],35:[2,34],37:[2,34],46:[2,34],49:[2,34]},{17:46,26:[1,21],35:[1,44],36:74,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,26:[1,21],35:[1,44],36:75,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{11:[2,37],25:[2,37],29:[2,37],31:[2,37],33:[2,37],35:[2,37],37:[2,37],45:[1,35],46:[2,37],47:[1,33],48:[1,34],49:[2,37]},{11:[2,38],25:[2,38],29:[2,38],31:[2,38],33:[2,38],35:[2,38],37:[2,38],46:[2,38],49:[2,38]},{11:[2,39],25:[2,39],29:[2,39],31:[2,39],33:[2,39],35:[2,39],37:[2,39],46:[2,39],49:[2,39]},{11:[2,40],25:[2,40],29:[2,40],31:[2,40],33:[2,40],35:[2,40],37:[2,40],46:[2,40],49:[2,40]},{11:[2,41],25:[2,41],29:[2,41],31:[2,41],33:[2,41],35:[2,41],37:[2,41],46:[2,41],49:[2,41]},{11:[2,42],25:[2,42],29:[2,42],31:[2,42],33:[2,42],35:[2,42],37:[2,42],46:[2,42],49:[2,42]},{17:46,20:76,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{11:[2,17],25:[1,77],46:[2,17]},{11:[2,18],25:[2,18],46:[2,18]},{11:[2,20],19:[1,78],25:[2,20],46:[2,20]},{17:46,20:79,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,20:80,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{10:81,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],44:20},{1:[2,2]},{26:[1,84],46:[1,82],62:83},{11:[2,15],29:[1,69],46:[2,15]},{11:[2,16],29:[1,69],46:[2,16]},{11:[2,45],18:[2,45],19:[2,45],21:[2,45],25:[2,45],29:[2,45],31:[2,45],33:[2,45],35:[2,45],37:[2,45],45:[2,45],46:[2,45],47:[2,45],48:[2,45],49:[2,45]},{29:[1,69],49:[1,85]},{11:[2,47],25:[2,47],29:[2,47],31:[2,47],33:[2,47],35:[2,47],37:[2,47],46:[2,47],49:[2,47]},{25:[1,87],46:[1,86]},{25:[2,49],29:[1,69],46:[2,49]},{6:[2,23]},{17:46,26:[1,21],28:88,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,26:[1,21],30:89,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,26:[1,21],32:90,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,26:[1,21],34:91,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{17:46,26:[1,21],35:[1,44],36:92,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{11:[2,35],25:[2,35],29:[2,35],31:[2,35],33:[2,35],35:[2,35],37:[2,35],46:[2,35],49:[2,35]},{11:[2,36],25:[2,36],29:[2,36],31:[2,36],33:[2,36],35:[2,36],37:[2,36],46:[2,36],49:[2,36]},{29:[1,69],46:[1,93]},{24:94,26:[1,55]},{17:46,20:95,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{29:[1,69],46:[1,96]},{29:[1,69],46:[1,97]},{11:[1,98]},{55:[1,99]},{25:[1,101],46:[1,100]},{25:[2,63],46:[2,63]},{11:[2,46],18:[2,46],19:[2,46],21:[2,46],25:[2,46],29:[2,46],31:[2,46],33:[2,46],35:[2,46],37:[2,46],45:[2,46],46:[2,46],47:[2,46],48:[2,46],49:[2,46]},{11:[2,48],25:[2,48],29:[2,48],31:[2,48],33:[2,48],35:[2,48],37:[2,48],46:[2,48],49:[2,48]},{17:46,20:102,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{11:[2,25],25:[2,25],29:[2,25],31:[1,70],46:[2,25],49:[2,25]},{11:[2,27],25:[2,27],29:[2,27],31:[2,27],33:[1,71],46:[2,27],49:[2,27]},{11:[2,29],25:[2,29],29:[2,29],31:[2,29],33:[2,29],35:[1,72],46:[2,29],49:[2,29]},{11:[2,31],25:[2,31],29:[2,31],31:[2,31],33:[2,31],35:[2,31],37:[1,73],46:[2,31],49:[2,31]},{11:[2,33],25:[2,33],29:[2,33],31:[2,33],33:[2,33],35:[2,33],37:[2,33],46:[2,33],49:[2,33]},{11:[2,43],25:[2,43],29:[2,43],31:[2,43],33:[2,43],35:[2,43],37:[2,43],46:[2,43],49:[2,43]},{11:[2,19],25:[2,19],46:[2,19]},{11:[2,21],25:[2,21],29:[1,69],46:[2,21]},{55:[1,103]},{55:[1,104]},{17:46,20:105,26:[1,21],28:38,30:39,32:40,34:41,35:[1,44],36:42,38:43,39:[1,45],40:[1,47],41:[1,48],42:[1,49],43:[1,50],44:51,45:[1,52]},{6:[1,106]},{55:[1,107]},{26:[1,108]},{25:[2,50],29:[1,69],46:[2,50]},{6:[1,109]},{6:[1,110]},{11:[1,111],29:[1,69]},{9:112,22:[2,6],26:[2,6],27:[2,6],54:[2,6],56:[2,6],59:[2,6],60:[2,6]},{6:[1,113]},{25:[2,64],46:[2,64]},{9:114,22:[2,6],26:[2,6],27:[2,6],54:[2,6],56:[2,6],59:[2,6],60:[2,6]},{9:115,22:[2,6],26:[2,6],27:[2,6],54:[2,6],56:[2,6],59:[2,6],60:[2,6]},{10:116,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],44:20},{7:118,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],56:[1,117],59:[1,23],60:[1,24]},{9:119,22:[2,6],26:[2,6],27:[2,6],54:[2,6],56:[2,6],59:[2,6],60:[2,6]},{7:118,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],56:[1,120],59:[1,23],60:[1,24]},{7:118,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],56:[1,121],59:[1,23],60:[1,24]},{46:[1,122]},{6:[2,61]},{6:[1,123]},{7:118,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],56:[1,124],59:[1,23],60:[1,24]},{6:[2,56],57:125,58:[1,126]},{6:[2,59]},{55:[1,127]},{22:[2,7],26:[2,7],27:[2,7],54:[2,7],56:[2,7],59:[2,7],60:[2,7]},{6:[2,62]},{6:[2,55]},{51:128,54:[1,22],55:[1,129]},{6:[1,130]},{6:[2,57]},{6:[1,131]},{9:132,22:[2,6],26:[2,6],27:[2,6],54:[2,6],56:[2,6],59:[2,6],60:[2,6]},{9:133,22:[2,6],26:[2,6],27:[2,6],54:[2,6],56:[2,6],59:[2,6],60:[2,6]},{7:118,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],56:[1,134],59:[1,23],60:[1,24]},{7:118,10:7,12:8,13:9,14:11,15:12,16:13,17:14,22:[1,19],26:[1,21],27:[1,18],44:20,51:15,52:16,53:17,54:[1,22],56:[1,135],59:[1,23],60:[1,24]},{6:[2,60]},{6:[2,58]}],\ndefaultActions: {4:[2,1],8:[2,9],9:[2,10],15:[2,52],16:[2,53],17:[2,54],28:[2,8],36:[2,22],59:[2,2],68:[2,23],117:[2,61],121:[2,59],124:[2,62],125:[2,55],128:[2,57],134:[2,60],135:[2,58]},\nparseError: function parseError(str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this,\n        stack = [0],\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    if (typeof this.lexer.yylloc == 'undefined')\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n\n    if (typeof this.yy.parseError === 'function')\n        this.parseError = this.yy.parseError;\n\n    function popStack (n) {\n        stack.length = stack.length - 2*n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1; // $end = 1\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length-1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol == null)\n                symbol = lex();\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n        // handle parse error\n        _handle_error:\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n\n            if (!recovering) {\n                // Report error\n                expected = [];\n                for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                    expected.push(\"'\"+this.terminals_[p]+\"'\");\n                }\n                var errStr = '';\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + this.terminals_[symbol]+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == 1 /*EOF*/ ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr,\n                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol == EOF) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            while (1) {\n                // check for error recovery rule in this state\n                if ((TERROR.toString()) in table[state]) {\n                    break;\n                }\n                if (state == 0) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n                popStack(1);\n                state = stack[stack.length-1];\n            }\n\n            preErrorSymbol = symbol; // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(this.lexer.yytext);\n                lstack.push(this.lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = this.lexer.yyleng;\n                    yytext = this.lexer.yytext;\n                    yylineno = this.lexer.yylineno;\n                    yyloc = this.lexer.yylloc;\n                    if (recovering > 0)\n                        recovering--;\n                } else { // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2: // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3: // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parseError) {\n            this.yy.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext+=ch;\n        this.yyleng++;\n        this.match+=ch;\n        this.matched+=ch;\n        var lines = ch.match(/\\n/);\n        if (lines) this.yylineno++;\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        this._input = ch + this._input;\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this._input = this.match.slice(n) + this._input;\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/\\n.*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}\n            this.yytext += match[0];\n            this.match += match[0];\n            this.yyleng = this.yytext.length;\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(), \n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex() {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState() {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules() {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin(condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:/* skip and comments */\nbreak;\ncase 1:return \"++\";\nbreak;\ncase 2:return \"+=\";\nbreak;\ncase 3:return \"==\";\nbreak;\ncase 4:return \"&&\";\nbreak;\ncase 5:return \"||\";\nbreak;\ncase 6:return \"=\";\nbreak;\ncase 7:return \"+\";\nbreak;\ncase 8:return \"*\";\nbreak;\ncase 9:return \";\";\nbreak;\ncase 10:return \"!\";\nbreak;\ncase 11:return \"(\";\nbreak;\ncase 12:return \")\";\nbreak;\ncase 13:return \"{\";\nbreak;\ncase 14:return \"}\";\nbreak;\ncase 15:return \"[\";\nbreak;\ncase 16:return \"]\";\nbreak;\ncase 17:return \".\";\nbreak;\ncase 18:return \",\";\nbreak;\ncase 19:return \"RESERVED\";\nbreak;\ncase 20:return \"TRUE\";\nbreak;\ncase 21:return \"FALSE\";\nbreak;\ncase 22:return \"IF\";\nbreak;\ncase 23:return \"ELSE\";\nbreak;\ncase 24:return \"WHILE\";\nbreak;\ncase 25:return \"FOR\";\nbreak;\ncase 26:return \"VAR\";\nbreak;\ncase 27:return \"FUNCTION\";\nbreak;\ncase 28:return \"RETURN\";\nbreak;\ncase 29:return \"NAME\";\nbreak;\ncase 30:return \"NEWLINE\";\nbreak;\ncase 31:return \"NUMBER\";\nbreak;\ncase 32:return \"STRING\";\nbreak;\ncase 33:return \"EOF\";\nbreak;\n}\n};\nlexer.rules = [/^((?:((?:[ \\f\\r\\t\\v\\u00A0\\u2028\\u2029]+))|((?:[/][/][^\\n]*))|((?:[/][*]([^*]*[*][^/])*[^*]*[*][/]))))/,/^(\\+\\+|--)/,/^(\\+=|-=|\\*=|\\/=|%=)/,/^(==|!=|>=|<=|>|<)/,/^&&/,/^\\|\\|/,/^=/,/^(\\+|-)/,/^(\\*|\\/|%)/,/^;/,/^!/,/^\\(/,/^\\)/,/^\\{/,/^\\}/,/^\\[/,/^\\]/,/^\\./,/^,/,/^((?:null|break|case|catch|default|finally|instanceof|new|continue|void|delete|this|do|in|switch|throw|try|typeof|with|abstract|boolean|byte|char|class|const|debugger|double|enum|export|extends|final|float|goto|implements|import|int|interface|long|native|package|private|protected|public|short|static|super|synchronized|throws|transient|volatile|arguments|NaN|Array|Object|RegExp|toString|jsmmscope|jsmmscopeInner|jsmmscopeOuter|jsmm|jsmmparser|jsmmExecutionCounter))(?!([0-9a-zA-Z_]))/,/^true\\b/,/^false\\b/,/^if\\b/,/^((?:(?:[\\n]((?:((?:[ \\f\\r\\t\\v\\u00A0\\u2028\\u2029]+))|((?:[/][/][^\\n]*))|((?:[/][*]([^*]*[*][^/])*[^*]*[*][/]))))?)+))?else\\b/,/^while\\b/,/^for\\b/,/^var\\b/,/^function\\b/,/^return\\b/,/^([a-zA-Z_])([0-9a-zA-Z_])*/,/^((?:(?:[\\n]((?:((?:[ \\f\\r\\t\\v\\u00A0\\u2028\\u2029]+))|((?:[/][/][^\\n]*))|((?:[/][*]([^*]*[*][^/])*[^*]*[*][/]))))?)+))/,/^((?:(?:(?:[1-9]([0-9])*)|0)((?:\\.([0-9])+))?((?:[eE][+-]?([0-9])+))?))/,/^((?:[\"][^\\\\\"\\n]*(?:[\\\\][nt\"\\\\][^\\\\\"]*)*[\"]))/,/^$/];\nlexer.conditions = {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nreturn parser;\n})();\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = jsmmparser;\nexports.parse = function () { return jsmmparser.parse.apply(jsmmparser, arguments); }\nexports.main = function commonjsMain(args) {\n    if (!args[1])\n        throw new Error('Usage: '+args[0]+' FILE');\n    if (typeof process !== 'undefined') {\n        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), \"utf8\");\n    } else {\n        var cwd = require(\"file\").path(require(\"file\").cwd());\n        var source = cwd.join(args[1]).read({charset: \"utf-8\"});\n    }\n    return exports.parser.parse(source);\n}\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require(\"system\").args);\n}\n}\n//@ sourceURL=/jsmm/jsmmparser.js"
));

require.define("fs", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "// nothing to see here... no file methods for the browser\n\n//@ sourceURL=fs"
));

require.define("/node_modules/file/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"./lib/file\"}\n//@ sourceURL=/node_modules/file/package.json"
));

require.define("/node_modules/file/lib/file.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var path = require('path');\nvar fs = require('fs');\nvar assert = require(\"assert\");\n\n// file.mkdirs\n//\n// Given a path to a directory, create it, and all the intermediate directories\n// as well\n// \n// @path: the path to create\n// @mode: the file mode to create the directory with:\n//    ex: file.mkdirs(\"/tmp/dir\", 755, function () {})\n// @callback: called when finished.\nexports.mkdirs = function (_path, mode, callback) {\n  _path = exports.path.abspath(_path);\n\n  var dirs = _path.split(\"/\");\n  var walker = [dirs.shift()];\n\n  // walk\n  // @ds:  A list of directory names\n  // @acc: An accumulator of walked dirs\n  // @m:   The mode\n  // @cb:  The callback\n  var walk = function (ds, acc, m, cb) {\n    if (ds.length > 0) {\n      var d = ds.shift();\n\n      acc.push(d);\n      var dir = acc.join(\"/\");\n\n      // look for dir on the fs, if it doesn't exist then create it, and \n      // continue our walk, otherwise if it's a file, we have a name\n      // collision, so exit.\n      fs.stat(dir, function (err, stat) {\n        // if the directory doesn't exist then create it\n        if (err) {\n          // 2 means it's wasn't there\n          if (err.errno == 2 || err.errno == 34) {\n            fs.mkdir(dir, m, function (erro) {\n              if (erro && erro.errno != 17 && erro.errno != 34) {\n                assert(false)\n                return cb(erro);\n              } else {\n                return walk(ds, acc, m, cb);\n              }\n            });\n          } else {\n            return cb(err);\n          }\n        } else {\n          if (stat.isDirectory()) {\n            return walk(ds, acc, m, cb);\n          } else {\n            return cb(new Error(\"Failed to mkdir \" + dir + \": File exists\\n\"));\n          }\n        }\n      });\n    } else {\n      return cb();\n    }\n  };\n  return walk(dirs, walker, mode, callback);\n};\n\n// file.mkdirsSync\n//\n// Synchronus version of file.mkdirs\n//\n// Given a path to a directory, create it, and all the intermediate directories\n// as well\n// \n// @path: the path to create\n// @mode: the file mode to create the directory with:\n//    ex: file.mkdirs(\"/tmp/dir\", 755, function () {})\nexports.mkdirsSync = function (_path, mode) {\n  if (_path[0] !== \"/\") {\n    _path = path.join(process.cwd(), _path)\n  }\n\n  var dirs = _path.split(\"/\");\n  var walker = [dirs.shift()];\n\n  dirs.reduce(function (acc, d) {\n    acc.push(d);\n    var dir = acc.join(\"/\");\n    \n    try {\n      var stat = fs.statSync(dir);\n      if (!stat.isDirectory()) {\n        throw \"Failed to mkdir \" + dir + \": File exists\";\n      }\n    } catch (err) {\n      fs.mkdirSync(dir, mode);\n    }\n    return acc;\n  }, walker);\n};\n\n// file.walk\n//\n// Given a path to a directory, walk the fs below that directory\n// \n// @start: the path to startat\n// @callback: called for each new directory we enter\n//    ex: file.walk(\"/tmp\", function(error, path, dirs, name) {})\n//\n//    path is the current directory we're in\n//    dirs is the list of directories below it\n//    names is the list of files in it\n//\nexports.walk = function (start, callback) {\n  fs.lstat(start, function (err, stat) {\n    if (err) { return callback(err) }\n    if (stat.isDirectory()) {\n\n      fs.readdir(start, function (err, files) {\n        var coll = files.reduce(function (acc, i) {\n          var abspath = path.join(start, i);\n\n          if (fs.statSync(abspath).isDirectory()) {\n            exports.walk(abspath, callback);\n            acc.dirs.push(abspath);\n          } else {\n            acc.names.push(abspath);\n          }\n\n          return acc;\n        }, {\"names\": [], \"dirs\": []});\n\n        return callback(null, start, coll.dirs, coll.names);\n      });\n    } else {\n      return callback(new Error(\"path: \" + start + \" is not a directory\"));\n    }\n  });\n};\n\n// file.walkSync\n//\n// Synchronus version of file.walk\n//\n// Given a path to a directory, walk the fs below that directory\n// \n// @start: the path to startat\n// @callback: called for each new directory we enter\n//    ex: file.walk(\"/tmp\", function(error, path, dirs, name) {})\n//\n//    path is the current directory we're in\n//    dirs is the list of directories below it\n//    names is the list of files in it\n//\nexports.walkSync = function (start, callback) {\n  var stat = fs.statSync(start);\n\n  if (stat.isDirectory()) {\n    var filenames = fs.readdirSync(start);\n\n    var coll = filenames.reduce(function (acc, name) {\n      var abspath = path.join(start, name);\n\n      if (fs.statSync(abspath).isDirectory()) {\n        acc.dirs.push(name);\n      } else {\n        acc.names.push(name);\n      }\n\n      return acc;\n    }, {\"names\": [], \"dirs\": []});\n\n    callback(start, coll.dirs, coll.names);\n\n    coll.dirs.forEach(function (d) {\n      var abspath = path.join(start, d);\n      exports.walkSync(abspath, callback);\n    });\n\n  } else {\n    throw new Error(\"path: \" + start + \" is not a directory\");\n  }\n};\n\nexports.path = {};\n\nexports.path.abspath = function (to) {\n  var from;\n  switch (to.charAt(0)) {\n    case \"~\": from = process.env.HOME; to = to.substr(1); break\n    case \"/\": from = \"\"; break\n    default : from = process.cwd(); break\n  }\n  return path.join(from, to);\n}\n\nexports.path.relativePath = function (base, compare) {\n  base = base.split(\"/\");\n  compare = compare.split(\"/\");\n\n  if (base[0] == \"\") {\n    base.shift();\n  }\n\n  if (compare[0] == \"\") {\n    compare.shift();\n  }\n\n  var l = compare.length;\n\n  for (var i = 0; i < l; i++) {\n    if (!base[i] || (base[i] != compare[i])) {\n      return compare.slice(i).join(\"/\");\n    }\n  }\n\n  return \"\"\n};\n\nexports.path.join = function (head, tail) {\n  if (head == \"\") {\n    return tail;\n  } else {\n    return path.join(head, tail);\n  }\n};\n\n\n//@ sourceURL=/node_modules/file/lib/file.js"
));

require.define("assert", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "// UTILITY\nvar util = require('util');\nvar pSlice = Array.prototype.slice;\n\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.message = options.message;\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  }\n};\nutil.inherits(assert.AssertionError, Error);\n\nfunction replacer(key, value) {\n  if (value === undefined) {\n    return '' + value;\n  }\n  if (typeof value === 'number' && (isNaN(value) || !isFinite(value))) {\n    return value.toString();\n  }\n  if (typeof value === 'function' || value instanceof RegExp) {\n    return value.toString();\n  }\n  return value;\n}\n\nfunction truncate(s, n) {\n  if (typeof s == 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nassert.AssertionError.prototype.toString = function() {\n  if (this.message) {\n    return [this.name + ':', this.message].join(' ');\n  } else {\n    return [\n      this.name + ':',\n      truncate(JSON.stringify(this.actual, replacer), 128),\n      this.operator,\n      truncate(JSON.stringify(this.expected, replacer), 128)\n    ].join(' ');\n  }\n};\n\n// assert.AssertionError instanceof Error\n\nassert.AssertionError.__proto__ = Error.prototype;\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!!!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (Buffer.isBuffer(actual) && Buffer.isBuffer(expected)) {\n    if (actual.length != expected.length) return false;\n\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i] !== expected[i]) return false;\n    }\n\n    return true;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object') {\n    return actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b) {\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b);\n  }\n  try {\n    var ka = Object.keys(a),\n        kb = Object.keys(b),\n        key, i;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (expected instanceof RegExp) {\n    return expected.test(actual);\n  } else if (actual instanceof expected) {\n    return true;\n  } else if (expected.call({}, actual) === true) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  try {\n    block();\n  } catch (e) {\n    actual = e;\n  }\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail('Missing expected exception' + message);\n  }\n\n  if (!shouldThrow && expectedException(actual, expected)) {\n    fail('Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws.apply(this, [true].concat(pSlice.call(arguments)));\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws.apply(this, [false].concat(pSlice.call(arguments)));\n};\n\nassert.ifError = function(err) { if (err) {throw err;}};\n\n//@ sourceURL=assert"
));

require.define("util", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "var events = require('events');\n\nexports.print = function () {};\nexports.puts = function () {};\nexports.debug = function() {};\n\nexports.inspect = function(obj, showHidden, depth, colors) {\n  var seen = [];\n\n  var stylize = function(str, styleType) {\n    // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n    var styles =\n        { 'bold' : [1, 22],\n          'italic' : [3, 23],\n          'underline' : [4, 24],\n          'inverse' : [7, 27],\n          'white' : [37, 39],\n          'grey' : [90, 39],\n          'black' : [30, 39],\n          'blue' : [34, 39],\n          'cyan' : [36, 39],\n          'green' : [32, 39],\n          'magenta' : [35, 39],\n          'red' : [31, 39],\n          'yellow' : [33, 39] };\n\n    var style =\n        { 'special': 'cyan',\n          'number': 'blue',\n          'boolean': 'yellow',\n          'undefined': 'grey',\n          'null': 'bold',\n          'string': 'green',\n          'date': 'magenta',\n          // \"name\": intentionally not styling\n          'regexp': 'red' }[styleType];\n\n    if (style) {\n      return '\\033[' + styles[style][0] + 'm' + str +\n             '\\033[' + styles[style][1] + 'm';\n    } else {\n      return str;\n    }\n  };\n  if (! colors) {\n    stylize = function(str, styleType) { return str; };\n  }\n\n  function format(value, recurseTimes) {\n    // Provide a hook for user-specified inspect functions.\n    // Check that value is an object with an inspect function on it\n    if (value && typeof value.inspect === 'function' &&\n        // Filter out the util module, it's inspect function is special\n        value !== exports &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)) {\n      return value.inspect(recurseTimes);\n    }\n\n    // Primitive types cannot have properties\n    switch (typeof value) {\n      case 'undefined':\n        return stylize('undefined', 'undefined');\n\n      case 'string':\n        var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                                 .replace(/'/g, \"\\\\'\")\n                                                 .replace(/\\\\\"/g, '\"') + '\\'';\n        return stylize(simple, 'string');\n\n      case 'number':\n        return stylize('' + value, 'number');\n\n      case 'boolean':\n        return stylize('' + value, 'boolean');\n    }\n    // For some reason typeof null is \"object\", so special case here.\n    if (value === null) {\n      return stylize('null', 'null');\n    }\n\n    // Look up the keys of the object.\n    var visible_keys = Object_keys(value);\n    var keys = showHidden ? Object_getOwnPropertyNames(value) : visible_keys;\n\n    // Functions without properties can be shortcutted.\n    if (typeof value === 'function' && keys.length === 0) {\n      if (isRegExp(value)) {\n        return stylize('' + value, 'regexp');\n      } else {\n        var name = value.name ? ': ' + value.name : '';\n        return stylize('[Function' + name + ']', 'special');\n      }\n    }\n\n    // Dates without properties can be shortcutted\n    if (isDate(value) && keys.length === 0) {\n      return stylize(value.toUTCString(), 'date');\n    }\n\n    var base, type, braces;\n    // Determine the object type\n    if (isArray(value)) {\n      type = 'Array';\n      braces = ['[', ']'];\n    } else {\n      type = 'Object';\n      braces = ['{', '}'];\n    }\n\n    // Make functions say that they are functions\n    if (typeof value === 'function') {\n      var n = value.name ? ': ' + value.name : '';\n      base = (isRegExp(value)) ? ' ' + value : ' [Function' + n + ']';\n    } else {\n      base = '';\n    }\n\n    // Make dates with properties first say the date\n    if (isDate(value)) {\n      base = ' ' + value.toUTCString();\n    }\n\n    if (keys.length === 0) {\n      return braces[0] + base + braces[1];\n    }\n\n    if (recurseTimes < 0) {\n      if (isRegExp(value)) {\n        return stylize('' + value, 'regexp');\n      } else {\n        return stylize('[Object]', 'special');\n      }\n    }\n\n    seen.push(value);\n\n    var output = keys.map(function(key) {\n      var name, str;\n      if (value.__lookupGetter__) {\n        if (value.__lookupGetter__(key)) {\n          if (value.__lookupSetter__(key)) {\n            str = stylize('[Getter/Setter]', 'special');\n          } else {\n            str = stylize('[Getter]', 'special');\n          }\n        } else {\n          if (value.__lookupSetter__(key)) {\n            str = stylize('[Setter]', 'special');\n          }\n        }\n      }\n      if (visible_keys.indexOf(key) < 0) {\n        name = '[' + key + ']';\n      }\n      if (!str) {\n        if (seen.indexOf(value[key]) < 0) {\n          if (recurseTimes === null) {\n            str = format(value[key]);\n          } else {\n            str = format(value[key], recurseTimes - 1);\n          }\n          if (str.indexOf('\\n') > -1) {\n            if (isArray(value)) {\n              str = str.split('\\n').map(function(line) {\n                return '  ' + line;\n              }).join('\\n').substr(2);\n            } else {\n              str = '\\n' + str.split('\\n').map(function(line) {\n                return '   ' + line;\n              }).join('\\n');\n            }\n          }\n        } else {\n          str = stylize('[Circular]', 'special');\n        }\n      }\n      if (typeof name === 'undefined') {\n        if (type === 'Array' && key.match(/^\\d+$/)) {\n          return str;\n        }\n        name = JSON.stringify('' + key);\n        if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n          name = name.substr(1, name.length - 2);\n          name = stylize(name, 'name');\n        } else {\n          name = name.replace(/'/g, \"\\\\'\")\n                     .replace(/\\\\\"/g, '\"')\n                     .replace(/(^\"|\"$)/g, \"'\");\n          name = stylize(name, 'string');\n        }\n      }\n\n      return name + ': ' + str;\n    });\n\n    seen.pop();\n\n    var numLinesEst = 0;\n    var length = output.reduce(function(prev, cur) {\n      numLinesEst++;\n      if (cur.indexOf('\\n') >= 0) numLinesEst++;\n      return prev + cur.length + 1;\n    }, 0);\n\n    if (length > 50) {\n      output = braces[0] +\n               (base === '' ? '' : base + '\\n ') +\n               ' ' +\n               output.join(',\\n  ') +\n               ' ' +\n               braces[1];\n\n    } else {\n      output = braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n    }\n\n    return output;\n  }\n  return format(obj, (typeof depth === 'undefined' ? 2 : depth));\n};\n\n\nfunction isArray(ar) {\n  return ar instanceof Array ||\n         Array.isArray(ar) ||\n         (ar && ar !== Object.prototype && isArray(ar.__proto__));\n}\n\n\nfunction isRegExp(re) {\n  return re instanceof RegExp ||\n    (typeof re === 'object' && Object.prototype.toString.call(re) === '[object RegExp]');\n}\n\n\nfunction isDate(d) {\n  if (d instanceof Date) return true;\n  if (typeof d !== 'object') return false;\n  var properties = Date.prototype && Object_getOwnPropertyNames(Date.prototype);\n  var proto = d.__proto__ && Object_getOwnPropertyNames(d.__proto__);\n  return JSON.stringify(proto) === JSON.stringify(properties);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\nexports.log = function (msg) {};\n\nexports.pump = null;\n\nvar Object_keys = Object.keys || function (obj) {\n    var res = [];\n    for (var key in obj) res.push(key);\n    return res;\n};\n\nvar Object_getOwnPropertyNames = Object.getOwnPropertyNames || function (obj) {\n    var res = [];\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) res.push(key);\n    }\n    return res;\n};\n\nvar Object_create = Object.create || function (prototype, properties) {\n    // from es5-shim\n    var object;\n    if (prototype === null) {\n        object = { '__proto__' : null };\n    }\n    else {\n        if (typeof prototype !== 'object') {\n            throw new TypeError(\n                'typeof prototype[' + (typeof prototype) + '] != \\'object\\''\n            );\n        }\n        var Type = function () {};\n        Type.prototype = prototype;\n        object = new Type();\n        object.__proto__ = prototype;\n    }\n    if (typeof properties !== 'undefined' && Object.defineProperties) {\n        Object.defineProperties(object, properties);\n    }\n    return object;\n};\n\nexports.inherits = function(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object_create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n};\n\n//@ sourceURL=util"
));

require.define("events", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "if (!process.EventEmitter) process.EventEmitter = function () {};\n\nvar EventEmitter = exports.EventEmitter = process.EventEmitter;\nvar isArray = typeof Array.isArray === 'function'\n    ? Array.isArray\n    : function (xs) {\n        return Object.toString.call(xs) === '[object Array]'\n    }\n;\n\n// By default EventEmitters will print a warning if more than\n// 10 listeners are added to it. This is a useful default which\n// helps finding memory leaks.\n//\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nvar defaultMaxListeners = 10;\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!this._events) this._events = {};\n  this._events.maxListeners = n;\n};\n\n\nEventEmitter.prototype.emit = function(type) {\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events || !this._events.error ||\n        (isArray(this._events.error) && !this._events.error.length))\n    {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n      return false;\n    }\n  }\n\n  if (!this._events) return false;\n  var handler = this._events[type];\n  if (!handler) return false;\n\n  if (typeof handler == 'function') {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        var args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n    return true;\n\n  } else if (isArray(handler)) {\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    var listeners = handler.slice();\n    for (var i = 0, l = listeners.length; i < l; i++) {\n      listeners[i].apply(this, args);\n    }\n    return true;\n\n  } else {\n    return false;\n  }\n};\n\n// EventEmitter is defined in src/node_events.cc\n// EventEmitter.prototype.emit() is also defined there.\nEventEmitter.prototype.addListener = function(type, listener) {\n  if ('function' !== typeof listener) {\n    throw new Error('addListener only takes instances of Function');\n  }\n\n  if (!this._events) this._events = {};\n\n  // To avoid recursion in the case that type == \"newListeners\"! Before\n  // adding it to the listeners, first emit \"newListeners\".\n  this.emit('newListener', type, listener);\n\n  if (!this._events[type]) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  } else if (isArray(this._events[type])) {\n\n    // Check for listener leak\n    if (!this._events[type].warned) {\n      var m;\n      if (this._events.maxListeners !== undefined) {\n        m = this._events.maxListeners;\n      } else {\n        m = defaultMaxListeners;\n      }\n\n      if (m && m > 0 && this._events[type].length > m) {\n        this._events[type].warned = true;\n        console.error('(node) warning: possible EventEmitter memory ' +\n                      'leak detected. %d listeners added. ' +\n                      'Use emitter.setMaxListeners() to increase limit.',\n                      this._events[type].length);\n        console.trace();\n      }\n    }\n\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  } else {\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  var self = this;\n  self.on(type, function g() {\n    self.removeListener(type, g);\n    listener.apply(this, arguments);\n  });\n\n  return this;\n};\n\nEventEmitter.prototype.removeListener = function(type, listener) {\n  if ('function' !== typeof listener) {\n    throw new Error('removeListener only takes instances of Function');\n  }\n\n  // does not use listeners(), so no side effect of creating _events[type]\n  if (!this._events || !this._events[type]) return this;\n\n  var list = this._events[type];\n\n  if (isArray(list)) {\n    var i = list.indexOf(listener);\n    if (i < 0) return this;\n    list.splice(i, 1);\n    if (list.length == 0)\n      delete this._events[type];\n  } else if (this._events[type] === listener) {\n    delete this._events[type];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  // does not use listeners(), so no side effect of creating _events[type]\n  if (type && this._events && this._events[type]) this._events[type] = null;\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  if (!this._events) this._events = {};\n  if (!this._events[type]) this._events[type] = [];\n  if (!isArray(this._events[type])) {\n    this._events[type] = [this._events[type]];\n  }\n  return this._events[type];\n};\n\n//@ sourceURL=events"
));

require.define("/node_modules/system/package.json", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = {\"main\":\"engines/node/system\"}\n//@ sourceURL=/node_modules/system/package.json"
));

require.define("/node_modules/system/engines/node/system.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "'use strict'\n\nvar print, stdin\n\ntry { // node >= 0.3.0\n  print = require('util').puts\n} catch (e) { // node <= 0.3.0\n  print = require('sys').puts\n}\n\nObject.defineProperties(exports, {\n  stdout: {\n    value: process.stdout,\n    enumerable: true\n  },\n  stdin: {\n    get: function() {\n      return stdin || (stdin = process.openStdin())\n    },\n    enumerable: true\n  },\n  stderr: {\n    get: function() {\n      return stdin || (stdin = process.openStdin())\n    },\n    enumerable: true\n  },\n  env: {\n    value: process.env,\n    enumerable: true\n  },\n  args: {\n    value: process.argv,\n    enumerable: true\n  },\n  print: {\n    value: print,\n    enumerable: true\n  },\n  engine: {\n    value: 'node',\n    enumerable: true\n  }\n})\n\n//@ sourceURL=/node_modules/system/engines/node/system.js"
));

require.define("sys", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "module.exports = require('util');\n\n//@ sourceURL=sys"
));

require.define("/jsmm/jsmm.dot.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nmodule.exports = function(jsmm) {\n\tvar makeEdge = function(from, to) {\n\t\treturn from + \"->\" + to + \";\";\n\t};\n\t\n\tvar makeNode = function(id, label, shape) {\n\t\tlabel = label.replace(/\\\"/g, '&quot;');\n\t\tlabel = label.replace(/\\\\/g, '\\\\\\\\');\n\t\tshape = shape || \"\";\n\t\treturn id + '[label=\"' + label + '\"shape=\"' + shape + '\"];';\n\t};\n\t\n\t/* statementList */\n\tjsmm.yy.Program.prototype.getDot = function() {\n\t\treturn 'digraph{graph[ordering=\"in\"];' + makeNode(this.id, \"PROGRAM\") + this.statementList.getDot(this.id) + \"}\";\n\t};\n\t\n\t/* statements */\n\tjsmm.yy.StatementList.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += \"subgraph cluster\" + this.id + \"{color=lightgrey;\";\n\t\toutput += makeNode(this.id, \"\", \"point\");\n\t\tfor (var i=0; i<this.statements.length; i++) {\n\t\t\toutput += this.statements[i].getDot(this.id);\n\t\t}\n\t\toutput += \"}\";\n\t\treturn output;\n\t};\n\t\n\t/* statement */\n\tjsmm.yy.CommonSimpleStatement.prototype.getDot = function(fromId) {\n\t\treturn this.statement.getDot(fromId);\n\t};\n\t\n\t/* items */\n\tjsmm.yy.VarStatement.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += \"subgraph cluster\" + this.id + \"{color=transparent;\";\n\t\toutput += makeNode(this.id, \"var\");\n\t\tfor (var i=0; i<this.items.length; i++) {\n\t\t\toutput += this.items[i].getDot(this.id);\n\t\t}\n\t\toutput += \"}\";\n\t\treturn output;\n\t};\n\t\n\t/* name, assignment */\n\tjsmm.yy.VarItem.prototype.getDot = function(fromId) {\n\t\tvar output = \"\";\n\t\tif (this.assignment === null) {\n\t\t\toutput += makeEdge(fromId, this.id);\n\t\t\toutput += makeNode(this.id, this.name);\n\t\t}\n\t\telse {\n\t\t\toutput += this.assignment.getDot(fromId);\n\t\t}\n\t\treturn output;\n\t};\n\t\n\tjsmm.yy.PostfixStatement.prototype.getDot =\n\tjsmm.yy.AssignmentStatement.prototype.getDot =\n\tjsmm.yy.ReturnStatement.prototype.getDot =\n\tjsmm.yy.BinaryExpression.prototype.getDot =\n\tjsmm.yy.UnaryExpression.prototype.getDot =\n\tjsmm.yy.NumberLiteral.prototype.getDot =\n\tjsmm.yy.StringLiteral.prototype.getDot =\n\tjsmm.yy.BooleanLiteral.prototype.getDot =\n\tjsmm.yy.NameIdentifier.prototype.getDot =\n\tjsmm.yy.ObjectIdentifier.prototype.getDot =\n\tjsmm.yy.ArrayIdentifier.prototype.getDot =\n\tjsmm.yy.FunctionCall.prototype.getDot = function(fromId) {\n\t\treturn makeEdge(fromId, this.id) + makeNode(this.id, this.getCode());\n\t};\n\t\n\t/* functionCall */\n\tjsmm.yy.CallStatement.prototype.getDot = function(fromId) {\n\t\treturn this.functionCall.getDot(fromId);\n\t};\n\t\n\t/* expression, statementList, elseBlock */\n\tjsmm.yy.IfBlock.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += makeNode(this.id, \"if (\" + this.expression.getCode() + \")\", \"box\");\n\t\toutput += this.statementList.getDot(this.id);\n\t\tif (this.elseBlock !== null) {\n\t\t\toutput += this.elseBlock.getDot(this.id);\n\t\t}\n\t\treturn output;\n\t};\n\t\n\t/* ifBlock */\n\tjsmm.yy.ElseIfBlock.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += makeNode(this.id, \"else\", \"box\");\n\t\toutput += this.ifBlock.getDot(this.id);\n\t\treturn output;\n\t};\n\t\n\t/* statementList */\n\tjsmm.yy.ElseBlock.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += makeNode(this.id, \"else\", \"box\");\n\t\toutput += this.statementList.getDot(this.id);\n\t\treturn output;\n\t};\n\t\n\t/* expression, statementList */\n\tjsmm.yy.WhileBlock.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += makeNode(this.id, \"while (\" + this.expression.getCode() + \")\", \"box\");\n\t\toutput += this.statementList.getDot(this.id);\n\t\treturn output;\n\t};\n\t\n\t/* statement1, expression, statement2, statementList */\n\tjsmm.yy.ForBlock.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += makeNode(this.id, \"for ( ; \" + this.expression.getCode() + \" ; )\", \"box\");\n\t\toutput += this.statement1.getDot(this.id);\n\t\toutput += this.statementList.getDot(this.id);\n\t\toutput += this.statement2.getDot(this.id);\n\t\treturn output;\n\t};\n\t\n\t/* name, nameArgs, statementList */\n\tjsmm.yy.FunctionDeclaration.prototype.getDot = function(fromId) {\n\t\tvar output = makeEdge(fromId, this.id);\n\t\toutput += makeNode(this.id, \"function \" + this.name + this.getArgList(), \"octagon\");\n\t\toutput += this.statementList.getDot(this.id);\n\t\treturn output;\n\t};\n};\n\n//@ sourceURL=/jsmm/jsmm.dot.js"
));

require.define("/jsmm/jsmm.safe.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nmodule.exports = function(jsmm) {\n\trequire('./jsmm.func')(jsmm);\n\t\n\tvar getEl = function(obj) {\n\t\t//return '{line: ' + obj.startPos.line + ', column: ' + obj.startPos.column + '}';\n\t\treturn 'jsmmcontext.elements[' + obj.id + ']';\n\t};\n\t\n\tvar getScope = function() {\n\t\treturn '(jsmmscopeInner||jsmmscopeOuter)';\n\t};\n\t\n\t/* statementList */\n\tjsmm.yy.Program.prototype.getSafeCode = function() {\n\t\tvar output = 'new function() {';\n\t\toutput += 'return function(jsmm, jsmmcontext, jsmmscope) {';\n\t\toutput += 'return function() { var jsmmscopeInner, jsmmscopeOuter = new jsmm.func.Scope(jsmmscope);\\n';\n\t\toutput += 'var jsmmExecutionCounter = 0;\\n';\n\t\toutput += this.statementList.getSafeCode() + 'return jsmmscopeOuter; }; }; }';\n\t\treturn output;\n\t};\n\t\n\tjsmm.yy.Program.prototype.getSafeFunction = function(scope) {\n\t\t/*jshint evil:true*/\n\t\treturn eval(this.getSafeCode())(jsmm, this.context, scope);\n\t};\n\t\n\t/* statements */\n\tjsmm.yy.StatementList.prototype.getSafeCode = function() {\n\t\tvar output = 'jsmmExecutionCounter += ' + (this.statements.length+1) + ';\\n';\n\t\toutput += ' jsmm.func.checkExecutionCounter(' + getEl(this) + ', jsmmExecutionCounter);\\n';\n\t\tfor (var i=0; i<this.statements.length; i++) {\n\t\t\toutput += this.statements[i].getSafeCode() + '\\n';\n\t\t\tif (jsmm.verbose) {\n\t\t\t\toutput += 'console.log(\"after line ' + this.statements[i].endPos.line + ':\");\\n';\n\t\t\t\toutput += 'console.log(' +  getScope() + ');\\n';\n\t\t\t\toutput += 'console.log(\" \");\\n';\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\t\n\t/* statement */\n\tjsmm.yy.CommonSimpleStatement.prototype.getSafeCode = function() {\n\t\treturn this.statement.getSafeCode() + \";\";\n\t};\n\t\n\t/* identifier, symbol */\n\tjsmm.yy.PostfixStatement.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.postfix(' + getEl(this) + ', ' + this.identifier.getSafeCode() + ', \"' + this.symbol + '\")';\n\t};\n\t\n\t/* identifier, symbol, expression */\n\tjsmm.yy.AssignmentStatement.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.assignment(' + getEl(this) + ', ' + this.identifier.getSafeCode() + ', \"' + this.symbol + '\", ' + this.expression.getSafeCode() + ')';\n\t};\n\t\n\t/* items */\n\tjsmm.yy.VarStatement.prototype.getSafeCode = function() {\n\t\tvar output = this.items[0].getSafeCode();\n\t\tfor (var i=1; i<this.items.length; i++) {\n\t\t\toutput += ', ' + this.items[i].getSafeCode();\n\t\t}\n\t\treturn output;\n\t};\n\t\n\t/* name, assignment */\n\tjsmm.yy.VarItem.prototype.getSafeCode = function() {\n\t\tvar output = 'jsmm.func.varItem(' + getEl(this) + ', ' +  getScope() + ', \"' + this.name + '\")';\n\t\tif (this.assignment !== null) {\n\t\t\t// ; is invalid in for loops\n\t\t\t// this should be possible in JS for normal statements as well\n\t\t\toutput += ', ' + this.assignment.getSafeCode();\n\t\t}\n\t\treturn output;\n\t};\n\t\n\t/* expression */\n\tjsmm.yy.ReturnStatement.prototype.getSafeCode = function() {\n\t\tif (this.expression === null) {\n\t\t\treturn 'return jsmm.func.funcReturn(' + getEl(this) + ');';\n\t\t} else {\n\t\t\treturn 'return jsmm.func.funcReturn(' + getEl(this) + ', ' + this.expression.getSafeCode() + \");\";\n\t\t}\n\t};\n\t\n\t/* expression1, symbol, expression2 */\n\tjsmm.yy.BinaryExpression.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.binary(' + getEl(this) + ', ' + this.expression1.getSafeCode() + ', \"' + this.symbol + '\", ' + this.expression2.getSafeCode() + ')';\n\t};\n\t\n\t/* symbol, expression */\n\tjsmm.yy.UnaryExpression.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.unary(' + getEl(this) + ', \"' + this.symbol + '\", ' + this.expression.getSafeCode() + ')';\n\t};\n\t\n\t/* number */\n\tjsmm.yy.NumberLiteral.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.number(' + getEl(this) + ', ' + this.number + ')';\n\t};\n\t\n\t/* str */\n\tjsmm.yy.StringLiteral.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.string(' + getEl(this) + ', ' + JSON.stringify(this.str) + ')';\n\t};\n\t\n\t/* bool */\n\tjsmm.yy.BooleanLiteral.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.bool(' + getEl(this) + ', ' + (this.bool ? 'true' : 'false') + ')';\n\t};\n\t\n\t/* name */\n\tjsmm.yy.NameIdentifier.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.name(' + getEl(this) + ', ' +  getScope() + ', \"' + this.name + '\")';\n\t};\n\t\n\t/* identifier, prop */\n\tjsmm.yy.ObjectIdentifier.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.object(' + getEl(this) + ', ' + this.identifier.getSafeCode() + ', \"' + this.prop + '\")';\n\t};\n\t\n\t/* identifier, expression */\n\tjsmm.yy.ArrayIdentifier.prototype.getSafeCode = function() {\n\t\treturn 'jsmm.func.array(' + getEl(this) + ', ' + this.identifier.getSafeCode() + ', ' + this.expression.getSafeCode() + ')';\n\t};\n\t\n\t/* identifier, expressionArgs */\n\tjsmm.yy.FunctionCall.prototype.getSafeCode = function() {\n\t\tvar output = 'jsmm.func.funcCall(' + getEl(this) + ', ' + this.identifier.getSafeCode() + ', [';\n\t\tif (this.expressionArgs.length > 0) output += this.expressionArgs[0].getSafeCode();\n\t\tfor (var i=1; i<this.expressionArgs.length; i++) {\n\t\t\toutput += \", \" + this.expressionArgs[i].getSafeCode();\n\t\t}\n\t\treturn output + '])';\n\t};\n\t\n\t/* functionCall */\n\tjsmm.yy.CallStatement.prototype.getSafeCode = function() {\n\t\treturn this.functionCall.getSafeCode();\n\t};\n\t\n\t/* expression, statementList, elseBlock */\n\tjsmm.yy.IfBlock.prototype.getSafeCode = function() {\n\t\tvar output = \"if (jsmm.func.conditional(\" + getEl(this) + ', \"if\", ' + this.expression.getSafeCode() + \")) {\\n\";\n\t\toutput += this.statementList.getSafeCode() + \"}\";\n\t\tif (this.elseBlock !== null) {\n\t\t\toutput += this.elseBlock.getSafeCode();\n\t\t}\n\t\treturn output;\n\t};\n\t\n\t/* ifBlock */\n\tjsmm.yy.ElseIfBlock.prototype.getSafeCode = function() {\n\t\treturn \" else \" + this.ifBlock.getSafeCode();\n\t};\n\t\n\t/* statementList */\n\tjsmm.yy.ElseBlock.prototype.getSafeCode = function() {\n\t\treturn \" else {\\n\" + this.statementList.getSafeCode() + \"}\";\n\t};\n\t\n\t/* expression, statementList */\n\tjsmm.yy.WhileBlock.prototype.getSafeCode = function() {\n\t\treturn \"while (jsmm.func.conditional(\" + getEl(this) + ', \"while\", ' + this.expression.getSafeCode() + \")) {\\n\" + this.statementList.getSafeCode() + \"}\";\n\t};\n\t\n\t/* statement1, expression, statement2, statementList */\n\tjsmm.yy.ForBlock.prototype.getSafeCode = function() {\n\t\tvar output = \"for (\" + this.statement1.getSafeCode() + '; ';\n\t\toutput += 'jsmm.func.conditional(' + getEl(this) + ', \"for\", ' + this.expression.getSafeCode() + \"); \";\n\t\toutput += this.statement2.getSafeCode() + \") {\\n\" + this.statementList.getSafeCode() + \"}\";\n\t\treturn output;\n\t};\n\t\n\t/* name, nameArgs, statementList */\n\tjsmm.yy.FunctionDeclaration.prototype.getSafeCode = function() {\n\t\tvar output = 'jsmm.func.funcDecl(' + getEl(this) + ', jsmmscopeOuter, \"' + this.name + '\", ';\n\t\toutput += 'function' + this.getArgList() + \"{\\n\";\n\t\toutput += 'var jsmmscopeInner = new jsmm.func.Scope({';\n\t\tif (this.nameArgs.length > 0) output += '\"' + this.nameArgs[0] + '\": ' + this.nameArgs[0];\n\t\tfor (var i=1; i<this.nameArgs.length; i++) {\n\t\t\toutput += ', \"' + this.nameArgs[i] + '\": ' + this.nameArgs[i];\n\t\t}\n\t\toutput += '}, jsmmscopeOuter);\\n';\n\t\toutput += 'jsmm.func.funcEnter(' + getEl(this) + ', ' + getScope() + ');\\n';\n\t\tif (jsmm.verbose) {\n\t\t\toutput += 'console.log(\"after entering ' + this.name + ':\");\\n';\n\t\t\toutput += 'console.log(jsmmscopeInner);\\n';\n\t\t\toutput += 'console.log(\" \");\\n';\n\t\t}\n\t\toutput += this.statementList.getSafeCode();\n\t\toutput += 'return jsmm.func.funcReturn(' + getEl(this) + ');\\n';\n\t\toutput += '});';\n\t\treturn output;\n\t};\n};\n\n//@ sourceURL=/jsmm/jsmm.safe.js"
));

require.define("/jsmm/jsmm.func.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nmodule.exports = function(jsmm) {\n\trequire('./jsmm.msg')(jsmm);\n\t\n\tjsmm.func = {};\n\tjsmm.func.maxCallStackDepth = 100;\n\tjsmm.func.maxExecutionCounter = 1000;\n\t\n\tvar callStackDepth = 0;\n\t\n\tvar findVar = function(scope, name) {\n\t\tdo {\n\t\t\tif (scope.vars[name] !== undefined) {\n\t\t\t\treturn scope.vars[name];\n\t\t\t}\n\t\t\tscope = scope.parent;\n\t\t} while(scope !== null);\n\t\treturn undefined;\n\t};\n\t\n\tvar stringify = function(value) {\n\t\tif (typeof value === 'function') return 'function';\n\t\telse if (Object.prototype.toString.call(value) === '[object Array]') return 'array';\n\t\telse if (typeof value === 'object') return 'object';\n\t\telse if (value === undefined) return 'undefined';\n\t\telse return JSON.stringify(value);\n\t};\n\t\n\tjsmm.func.Scope = function(vars, parent) {\n\t\tthis.vars = {};\n\t\tfor(var name in vars) {\n\t\t\tthis.vars[name] = {name: name, str: stringify(vars[name]), value: vars[name]};\n\t\t}\n\t\tthis.parent = parent || null;\n\t};\n\t\n\tjsmm.func.postfix = function(el, variable, symbol) {\n\t\tif (typeof variable.value !== 'number') {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(variable.name) + ' is not a number'; });\n\t\t} else {\n\t\t\tif (symbol === '++') {\n\t\t\t\tvariable.value++;\n\t\t\t} else {\n\t\t\t\tvariable.value--;\n\t\t\t}\n\t\t}\n\t\tvariable.str = stringify(variable.value);\n\t\treturn variable;\n\t};\n\t\n\tjsmm.func.assignment = function(el, variable, symbol, expression) {\n\t\tif (symbol === '=') {\n\t\t\tvariable.value = expression.value;\n\t\t} else {\n\t\t\tvariable.value = jsmm.func.binary(el, variable, symbol, expression).value;\n\t\t}\n\t\tvariable.str = stringify(variable.value);\n\t\treturn variable;\n\t};\n\t\n\tjsmm.func.varItem = function(el, scope, name) {\n\t\tscope.vars[name] = {name: name, value: undefined, str: stringify(undefined)};\n\t\treturn scope.vars[name];\n\t};\n\t\n\tjsmm.func.binary = function(el, expression1, symbol, expression2) {\n\t\t/*jshint eqeqeq:false*/\n\t\tif (expression1.value === undefined) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression1.name) + ' is ' + f('undefined'); });\n\t\t} else if (expression2.value === undefined) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression2.name) + ' is ' + f('undefined'); });\n\t\t} else if (expression1.value === null) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression1.name) + ' is ' + f('null'); });\n\t\t} else if (expression2.value === null) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression2.name) + ' is ' + f('null'); });\n\t\t} else if (['-', '*', '/', '%', '-=', '*=', '/=', '%=', '>', '>=', '<', '<='].indexOf(symbol) >= 0) {\n\t\t\tif (typeof expression1.value !== 'number' || !isFinite(expression1.value)) {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression1.name) + ' is not a number'; });\n\t\t\t} else if (typeof expression2.value !== 'number' || !isFinite(expression2.value)) {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression2.name) + ' is not a number'; });\n\t\t\t} else if (['/', '/=', '%', '%='].indexOf(symbol) >= 0 && expression2.value === 0) {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since it is a division by zero'; });\n\t\t\t}\n\t\t} else if (['+', '+='].indexOf(symbol) >= 0) {\n\t\t\tif (['number', 'string'].indexOf(typeof expression1.value) < 0) {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression1.name) + ' is not a number or string'; });\n\t\t\t} else if (['number', 'string'].indexOf(typeof expression2.value) < 0) {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression2.name) + ' is not a number or string'; });\n\t\t\t}\n\t\t} else if (['&&', '||'].indexOf(symbol) >= 0) {\n\t\t\tif (typeof expression1.value !== 'boolean') {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression1.name) + ' is not a boolean'; });\n\t\t\t} else if (typeof expression2.value !== 'boolean') {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression2.name) + ' is not a boolean'; });\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar val;\n\t\tswitch(symbol) {\n\t\t\tcase '+': case '+=': val = expression1.value + expression2.value; break;\n\t\t\tcase '-': case '-=': val = expression1.value - expression2.value; break;\n\t\t\tcase '*': case '*=': val = expression1.value * expression2.value; break;\n\t\t\tcase '/': case '/=': val = expression1.value / expression2.value; break;\n\t\t\tcase '%': case '%=': val = expression1.value % expression2.value; break;\n\t\t\tcase '>': val = expression1.value > expression2.value; break;\n\t\t\tcase '>=': val = expression1.value >= expression2.value; break;\n\t\t\tcase '<': val = expression1.value < expression2.value; break;\n\t\t\tcase '<=': val = expression1.value <= expression2.value; break;\n\t\t\tcase '&&': val = expression1.value && expression2.value; break;\n\t\t\tcase '||': val = expression1.value || expression2.value; break;\n\t\t\tcase '==': val = expression1.value == expression2.value; break;\n\t\t\tcase '!=': val = expression1.value != expression2.value; break;\n\t\t}\n\t\t\n\t\treturn {name: '(' + expression1.name + ' ' + symbol + ' ' + expression2.name + ')', str: stringify(val), value: val};\n\t};\n\t\n\tjsmm.func.unary = function(el, symbol, expression) {\n\t\tvar val;\n\t\tif (symbol === '!') {\n\t\t\tif (typeof expression.value !== 'boolean') {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression.name) + ' is not a boolean'; });\n\t\t\t} else {\n\t\t\t\t//return {name: symbol + expression.name, value: !expression.value};\n\t\t\t\tval = !expression.value;\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof expression.value !== 'number') {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(symbol) + ' not possible since ' + f(expression.name) + ' is not a number'; });\n\t\t\t} else {\n\t\t\t\t//return {name: symbol + expression.name, value: (symbol==='+' ? expression.value : -expression.value)};\n\t\t\t\tval = (symbol==='+' ? expression.value : -expression.value);\n\t\t\t}\n\t\t}\n\t\treturn {name: '(' + symbol + expression.name + ')', str: stringify(val), value: val};\n\t};\n\t\n\tjsmm.func.number = function(el, num) {\n\t\treturn {name: stringify(num), str: stringify(num), value: num};\n\t};\n\t\n\tjsmm.func.string = function(el, str) {\n\t\treturn {name: stringify(str), str: stringify(str), value: str};\n\t};\n\t\n\tjsmm.func.bool = function(el, bool) {\n\t\treturn {name: stringify(bool), str: stringify(bool), value: bool};\n\t};\n\t\n\tjsmm.func.name = function(el, scope, name) {\n\t\tvar val = findVar(scope, name);\n\t\tif (val === undefined) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Variable ' + f(name) + ' could not be found'; });\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t};\n\t\n\tjsmm.func.object = function(el, object, property) {\n\t\tif (object.value[property] === undefined) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Variable ' + f(object.name) + ' does not have property ' + f(property); });\n\t\t} else {\n\t\t\treturn {name: object.name + '.' + property, str: stringify(object.value[property]), value: object.value[property], parent: object.value};\n\t\t}\n\t};\n\t\n\tjsmm.func.array = function(el, array, index) {\n\t\tif (typeof index.value !== \"number\" && index.value % 1 !== 0) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Index ' + f(index.name) + ' is not an integer'; });\n\t\t} else if (Object.prototype.toString.call(array.value) !== '[object Array]') {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Variable ' + f(array.name) + ' is not an array'; });\n\t\t} else if (array.value[index.value] === undefined) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Array ' + f(array.name) + ' has no index ' + f(index.name); });\n\t\t} else {\n\t\t\treturn {name: array.name + '[' + index.name + ']', str: stringify(array.value[index.value]), value: array.value[index.value]};\n\t\t}\n\t};\n\t\n\tjsmm.func.conditional = function(el, type, expression) {\n\t\tif (typeof expression.value !== 'boolean') {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return f(type) + ' is not possible since ' + f(expression.name) + ' is not a boolean'; });\n\t\t} else {\n\t\t\treturn expression.value;\n\t\t}\n\t};\n\t\n\tjsmm.func.funcCall = function(el, func, args) {\n\t\t/*jshint loopfunc:true*/\n\t\tif (typeof func.value !== 'function') {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Variable ' + f(func.name) + ' is not a function'; });\n\t\t} else {\n\t\t\tvar funcArgs = [];\n\t\t\tfor (var i=0; i<args.length; i++) {\n\t\t\t\tif (args[i].value === undefined) {\n\t\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Argument ' + f(args[i].name) + ' is undefined'; });\n\t\t\t\t} else if (args[i].value === undefined) {\n\t\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Argument ' + f(args[i].name) + ' is null'; });\n\t\t\t\t} else {\n\t\t\t\t\tfuncArgs.push(args[i].value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn jsmm.func.funcWrapResult(el, func, func.value.apply(func.parent || null, funcArgs));\n\t\t}\n\t};\n\t\n\tjsmm.func.funcWrapResult = function(el, func, result) {\n\t\tif (result === null) result = undefined;\n\t\t\n\t\tif (typeof func.value !== 'function') {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Variable ' + f(func.name) + ' is not a function'; });\n\t\t} else {\n\t\t\treturn {name: func.name, str: stringify(result), value: result};\n\t\t}\n\t};\n\t\n\tjsmm.func.funcDecl = function(el, scope, name, func) {\n\t\t// only check local scope for conflicts\n\t\tif (scope.vars[name] !== undefined) {\n\t\t\tif (typeof scope.vars[name].value === 'function') {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Function ' + f(name) + ' cannot be declared since there already is a function with that name'; });\n\t\t\t} else {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Function ' + f(name) + ' cannot be declared since there already is a variable with that name'; });\n\t\t\t}\n\t\t} else {\n\t\t\tscope.vars[name] = {name: name, str: name, value: func};\n\t\t\treturn scope.vars[name];\n\t\t}\n\t};\n\t\n\n\tjsmm.func.funcEnter = function(el, scope) {\n\t\t/*jshint loopfunc:true*/\n\t\tcallStackDepth++;\n\t\tif (callStackDepth > jsmm.func.maxCallStackDepth) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Too many nested function calls have been made already, perhaps there is infinite recursion somewhere'; });\n\t\t}\n\t\tfor (var name in scope.vars) {\n\t\t\tif (scope.vars[name].value === undefined) {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Variable ' + f(scope.vars[name].name) + ' is ' + f('undefined') + ', perhaps there are not enough arguments in the function call'; });\n\t\t\t} else if (scope.vars[name].value === null) {\n\t\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Variable ' + f(scope.vars[name].name) + ' is ' + f('null'); });\n\t\t\t}\n\t\t}\n\t};\n\t\n\tjsmm.func.funcReturn = function(el, expression) {\n\t\tvar value;\n\t\tif (expression !== undefined) {\n\t\t\tvalue = expression.value;\n\t\t}\n\t\tcallStackDepth--;\n\t\treturn value;\n\t};\n\t\n\tjsmm.func.checkExecutionCounter = function(el, executionCounter) {\n\t\tif (executionCounter > jsmm.func.maxExecutionCounter) {\n\t\t\tthrow new jsmm.msg.Error(el, function(f){ return 'Program takes too long to run, perhaps there is an infinite loop somewhere'; });\n\t\t}\n\t};\n};\n\n//@ sourceURL=/jsmm/jsmm.func.js"
));

require.define("/jsmm/jsmm.msg.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nmodule.exports = function(jsmm) {\n\tjsmm.msg = {};\n\tjsmm.msg.Inline = function() { return this.init.apply(this, arguments); };\n\tjsmm.msg.Line = function() { return this.init.apply(this, arguments); };\n\tjsmm.msg.Continue = function() { return this.init.apply(this, arguments); };\n\tjsmm.msg.Error = function() { return this.init.apply(this, arguments); };\n\t\n\tjsmm.msg.addCommonMessageMethods = function(element) {\n\t\telement.initMsg = function(msg) {\n\t\t\tvar message = (typeof msg === 'function') ? msg : function(f) { return msg; };\n\t\t\tthis.message = message(function f(val) { return val; });\n\t\t\tthis.html = message(function f(val) {\n\t\t\t\t// we assume that val is already JSON stringified\n\t\t\t\treturn '<span class=\"msg-value\">' + val.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;') + '</span>';\n\t\t\t});\n\t\t};\n\t\telement.loadPos = function(pos) {\n\t\t\tvar startPos = pos.startPos || {};\n\t\t\tvar endPos = pos.endPos || {};\n\t\t\tthis.line = startPos.line || 0;\n\t\t\tthis.column = startPos.column || 0;\n\t\t\tif ((endPos.line || 0) === this.line && (endPos.column || 0) >= this.column) {\n\t\t\t\tthis.column2 = endPos.column || 0;\n\t\t\t} else {\n\t\t\t\tthis.column2 = this.column;\n\t\t\t}\n\t\t};\n\t\treturn element;\n\t};\n\t\n\tjsmm.msg.Inline.prototype = jsmm.msg.addCommonMessageMethods({\n\t\tinit: function(pos, msg) {\n\t\t\tthis.type = 'Inline';\n\t\t\tthis.loadPos(pos);\n\t\t\tthis.initMsg(msg);\n\t\t}\n\t});\n\t\n\tjsmm.msg.Line.prototype = jsmm.msg.addCommonMessageMethods({\n\t\tinit: function(pos, msg, append) {\n\t\t\tthis.type = 'Line';\n\t\t\tthis.loadPos(pos);\n\t\t\tthis.initMsg(msg);\n\t\t\tthis.append = append || false;\n\t\t}\n\t});\n\t\n\tjsmm.msg.Continue.prototype = jsmm.msg.addCommonMessageMethods({\n\t\tinit: function(pos) {\n\t\t\tthis.type = 'Continue';\n\t\t\tthis.loadPos(pos);\n\t\t}\n\t});\n\t\n\tjsmm.msg.Error.prototype = jsmm.msg.addCommonMessageMethods({\n\t\tinit: function(pos, msg, more, orig) {\n\t\t\tthis.type = 'Error';\n\t\t\tthis.loadPos(pos);\n\t\t\tthis.initMsg(msg);\n\t\t\tthis.more = more || '';\n\t\t\tthis.orig = orig || null;\n\t\t}\n\t});\n};\n\n//@ sourceURL=/jsmm/jsmm.msg.js"
));

require.define("/jsmm/jsmm.step.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nmodule.exports = function(jsmm) {\n\trequire('./jsmm.func')(jsmm);\n\trequire('./jsmm.msg')(jsmm);\n\t\n\tjsmm.step = {};\n\tjsmm.step.Stack = function() { return this.init.apply(this, arguments); };\n\tjsmm.step.StackElement = function() { return this.init.apply(this, arguments); };\n\t\n\tjsmm.step.Stack.prototype = {\n\t\tinit: function(context, scope) {\n\t\t\tthis.context = context;\n\t\t\tthis.elements = [new jsmm.step.StackElement(this, context.program, new jsmm.func.Scope(scope))];\n\t\t\tthis.executionCounter = 0;\n\t\t},\n\t\tgetLastStackElement: function() {\n\t\t\tif (this.elements.length > 0) {\n\t\t\t\treturn this.elements[this.elements.length-1];\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t\thasNext: function() {\n\t\t\treturn this.getLastStackElement() !== undefined;\n\t\t},\n\t\tstepNext: function(stack, se) {\n\t\t\treturn this.getLastStackElement().element.stepNext(this, this.getLastStackElement());\n\t\t},\n\t\t// not strictly a pop since it returns the last element instead of the popped element\n\t\tup: function(arg) {\n\t\t\tthis.elements.pop();\n\t\t\tthis.getLastStackElement().args.push(arg);\n\t\t\treturn this.getLastStackElement();\n\t\t},\n\t\tupNext: function(arg) {\n\t\t\tvar se = this.up(arg);\n\t\t\treturn se.element.stepNext(this, se);\n\t\t},\n\t\tpushStackElement: function(se) {\n\t\t\tthis.elements.push(se);\n\t\t\treturn se;\n\t\t},\n\t\tpushElement: function(el, scope) {\n\t\t\treturn this.pushStackElement(new jsmm.step.StackElement(this, el, scope)).element;\n\t\t},\n\t\tpushStackElementNext: function(se) {\n\t\t\tthis.elements.push(se);\n\t\t\treturn se.element.stepNext(this, se);\n\t\t},\n\t\tpushElementNext: function(el, scope) {\n\t\t\treturn this.pushStackElementNext(new jsmm.step.StackElement(this, el, scope));\n\t\t}\n\t};\n\t\n\tjsmm.step.StackElement.prototype = {\n\t\tinit: function(stack, element, scope) {\n\t\t\tthis.stack = stack;\n\t\t\tthis.element = element;\n\t\t\tthis.scope = scope;\n\t\t\tthis.args = [];\n\t\t}\n\t};\n\t\n\t/* statementList */\n\tjsmm.yy.Program.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\tstack.executionCounter = 0;\n\t\t\t\treturn stack.pushElementNext(this.statementList, se.scope);\n\t\t\tcase 1:\n\t\t\t\tstack.elements = [];\n\t\t\t\treturn [];\n\t\t}\n\t};\n\t\n\t/* statements */\n\tjsmm.yy.StatementList.prototype.stepNext = function(stack, se) {\n\t\tif (jsmm.verbose && se.args.length > 0) {\n\t\t\tconsole.log('after line ' + this.statements[se.args.length-1].endPos.line + ':');\n\t\t\tconsole.log(se.scope);\n\t\t\tconsole.log(' ');\n\t\t}\n\t\t\n\t\tif (se.args.length === 0) {\n\t\t\tstack.executionCounter += this.statements.length+1;\n\t\t\tjsmm.func.checkExecutionCounter(this, stack.executionCounter);\n\t\t}\n\t\t\n\t\tif (se.args.length < this.statements.length) {\n\t\t\treturn stack.pushElementNext(this.statements[se.args.length], se.scope);\n\t\t} else {\n\t\t\treturn stack.upNext(null);\n\t\t}\n\t};\n\t\n\t/* statement */\n\tjsmm.yy.CommonSimpleStatement.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.statement, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.upNext(null);\n\t\t}\n\t};\n\t\n\t/* identifier, symbol */\n\tjsmm.yy.PostfixStatement.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.identifier, se.scope);\n\t\t\tcase 1:\n\t\t\t\tvar result = jsmm.func.postfix(this, se.args[0], this.symbol);\n\t\t\t\tstack.up(null);\n\t\t\t\tvar message = function(f) { return f(se.args[0].name) + ' = ' + f(result.str); };\n\t\t\t\treturn [new jsmm.msg.Inline(this, message), new jsmm.msg.Line(this, message)];\n\t\t}\n\t};\n\t\n\t/* identifier, symbol, expression */\n\tjsmm.yy.AssignmentStatement.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.identifier, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.pushElementNext(this.expression, se.scope);\n\t\t\tcase 2:\n\t\t\t\tvar result = jsmm.func.assignment(this, se.args[0], this.symbol, se.args[1]);\n\t\t\t\tvar up = stack.up(result);\n\t\t\t\tvar append = (up.element instanceof jsmm.yy.VarItem);\n\t\t\t\tvar message = function(f) { return f(se.args[0].name) + ' = ' + f(result.str); };\n\t\t\t\treturn [new jsmm.msg.Inline(this, message), new jsmm.msg.Line(this, message, append)];\n\t\t}\n\t};\n\t\n\t/* items */\n\tjsmm.yy.VarStatement.prototype.stepNext = function(stack, se) {\n\t\tif (se.args.length === 0) {\n\t\t\tse.args.push(null);\n\t\t\treturn [new jsmm.msg.Line(this, ''),\n\t\t\t\tnew jsmm.msg.Continue(this)];\n\t\t} else if (se.args.length-1 < this.items.length) {\n\t\t\treturn stack.pushElementNext(this.items[se.args.length-1], se.scope);\n\t\t} else {\n\t\t\treturn stack.upNext(null);\n\t\t}\n\t};\n\t\n\t/* name, assignment */\n\tjsmm.yy.VarItem.prototype.stepNext = function(stack, se) {\n\t\tif (this.assignment === null) {\n\t\t\tjsmm.func.varItem(this, se.scope, this.name);\n\t\t\tvar ret = stack.upNext(null);\n\t\t\tret.push(new jsmm.msg.Line(this, 'undefined', true));\n\t\t\treturn ret;\n\t\t} else {\n\t\t\tswitch (se.args.length) {\n\t\t\t\tcase 0:\n\t\t\t\t\tjsmm.func.varItem(this, se.scope, this.name);\n\t\t\t\t\treturn stack.pushElementNext(this.assignment, se.scope);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn stack.upNext(null);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/* expression */\n\tjsmm.yy.ReturnStatement.prototype.stepNext = function(stack, se) {\n\t\tif (this.expression === null) {\n\t\t\tjsmm.func.funcReturn(this);\n\t\t\treturn stack.upNext(null);\n\t\t} else {\n\t\t\tswitch (se.args.length) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn stack.pushElementNext(this.expression, se.scope);\n\t\t\t\tcase 1:\n\t\t\t\t\tvar lastStackElement = stack.getLastStackElement();\n\t\t\t\t\tvar result = jsmm.func.funcReturn(this, se.args[0]);\n\t\t\t\t\twhile (!(lastStackElement.element instanceof jsmm.yy.FunctionCall ||\n\t\t\t\t\t\t\tlastStackElement.element instanceof jsmm.yy.Program)) {\n\t\t\t\t\t\tlastStackElement = stack.up(result);\n\t\t\t\t\t}\n\t\t\t\t\t// Postcondition: lastStackElement is a FunctionCall or a Program\n\t\t\t\t\treturn [new jsmm.msg.Line(this, 'return ' + se.args[0].str),\n\t\t\t\t\t\tnew jsmm.msg.Continue(this)];\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/* expression1, symbol, expression2 */\n\tjsmm.yy.BinaryExpression.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.expression1, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.pushElementNext(this.expression2, se.scope);\n\t\t\tcase 2:\n\t\t\t\tvar result = jsmm.func.binary(this, se.args[0], this.symbol, se.args[1]);\n\t\t\t\tstack.up(result);\n\t\t\t\tvar that = this;\n\t\t\t\treturn [new jsmm.msg.Inline(this, function(f) {\n\t\t\t\t\treturn f(se.args[0].str) + ' ' + that.symbol + ' ' + f(se.args[1].str) + ' = ' + f(result.str);\n\t\t\t\t})];\n\t\t}\n\t};\n\t\n\t/* symbol, expression */\n\tjsmm.yy.UnaryExpression.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.expression, se.scope);\n\t\t\tcase 1:\n\t\t\t\tvar result = jsmm.func.unary(this, this.symbol, se.args[0]);\n\t\t\t\tstack.up(result);\n\t\t\t\tvar that = this;\n\t\t\t\treturn [new jsmm.msg.Inline(this, function(f) {\n\t\t\t\t\treturn that.symbol + f(se.args[0].str) + ' = ' + f(result.str);\n\t\t\t\t})];\n\t\t}\n\t};\n\t\n\t/* number */\n\tjsmm.yy.NumberLiteral.prototype.stepNext = function(stack, se) {\n\t\treturn stack.upNext(jsmm.func.number(this, this.number));\n\t};\n\t\n\t/* str */\n\tjsmm.yy.StringLiteral.prototype.stepNext = function(stack, se) {\n\t\treturn stack.upNext(jsmm.func.string(this, this.str));\n\t};\n\t\n\t/* bool */\n\tjsmm.yy.BooleanLiteral.prototype.stepNext = function(stack, se) {\n\t\treturn stack.upNext(jsmm.func.bool(this, this.bool));\n\t};\n\t\n\t/* name */\n\tjsmm.yy.NameIdentifier.prototype.stepNext = function(stack, se) {\n\t\treturn stack.upNext(jsmm.func.name(this, se.scope, this.name));\n\t};\n\t\n\t/* identifier, prop */\n\tjsmm.yy.ObjectIdentifier.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.identifier, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.upNext(jsmm.func.object(this, se.args[0], this.prop));\n\t\t}\n\t};\n\t\n\t/* identifier, expression */\n\tjsmm.yy.ArrayIdentifier.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.identifier, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.pushElementNext(this.expression, se.scope);\n\t\t\tcase 2:\n\t\t\t\treturn stack.upNext(jsmm.func.array(this, se.args[0], se.args[1]));\n\t\t}\n\t};\n\t\n\t/* identifier, expressionArgs */\n\tjsmm.yy.FunctionCall.prototype.stepNext = function(stack, se) {\n\t\t// calculate function name once all the arguments are known\n\t\tif (se.args.length > this.expressionArgs.length) {\n\t\t\tvar name = se.args[0].name + '(';\n\t\t\tif (this.expressionArgs.length > 0) name += se.args[1].str;\n\t\t\tfor (var i=1; i<this.expressionArgs.length; i++) {\n\t\t\t\tname += ', ' + se.args[i+1].str;\n\t\t\t}\n\t\t\tname += ')';\n\t\t}\n\t\t\n\t\tvar result, up;\n\t\tif (se.args.length === 0) {\n\t\t\treturn stack.pushElementNext(this.identifier, se.scope);\n\t\t} else if (se.args.length < this.expressionArgs.length+1) {\n\t\t\treturn stack.pushElementNext(this.expressionArgs[se.args.length-1], se.scope);\n\t\t} else if (se.args.length === this.expressionArgs.length+1) {\n\t\t\tse.args.push(null);\n\t\t\t\n\t\t\treturn [new jsmm.msg.Inline(this, function(f) {\n\t\t\t\treturn 'calling ' + f(name);\n\t\t\t})];\n\t\t} else if (se.args.length === this.expressionArgs.length+2) {\n\t\t\t// first actual function call (all arguments are evaluated)\n\t\t\tresult = jsmm.func.funcCall(this, se.args[0], se.args.slice(1, se.args.length-1));\n\t\t\t\n\t\t\tif (result.value !== undefined && result.value[0] !== undefined && result.value[0] instanceof jsmm.msg.Inline) {\n\t\t\t\t// in this case the local function has been placed on the stack, so no moving up\n\t\t\t\treturn result.value;\n\t\t\t} else {\n\t\t\t\tup = stack.up(result);\n\t\t\t\t// fall through\n\t\t\t}\n\t\t} else {\n\t\t\t// in case of a user defined function, the result will be pushed on args\n\t\t\t// NOTE: this line is not used entirely correctly, as it is normally\n\t\t\t// called in the context of a function declaration, not a call\n\t\t\tresult = jsmm.func.funcWrapResult(this, se.args[0], se.args.pop());\n\t\t\tup = stack.up(result);\n\t\t\t// fall through\n\t\t}\n\t\t\n\t\tif (up.element instanceof jsmm.yy.CallStatement) {\n\t\t\treturn [\n\t\t\t\tnew jsmm.msg.Line(this, function(f) { return f(name); }),\n\t\t\t\tnew jsmm.msg.Continue(this)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [new jsmm.msg.Inline(this, function(f) { return f(name) + ' = ' + f(result.str); })];\n\t\t}\n\t};\n\t\n\t/* functionCall */\n\tjsmm.yy.CallStatement.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.functionCall, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.upNext(null);\n\t\t}\n\t};\n\t\n\t/* expression, statementList, elseBlock */\n\tjsmm.yy.IfBlock.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.expression, se.scope);\n\t\t\tcase 1:\n\t\t\t\tif (jsmm.func.conditional(this, 'if', se.args[0])) {\n\t\t\t\t\treturn stack.pushElementNext(this.statementList, se.scope);\n\t\t\t\t} else if(this.elseBlock !== null) {\n\t\t\t\t\treturn stack.pushElementNext(this.elseBlock, se.scope);\n\t\t\t\t} else {\n\t\t\t\t\treturn stack.upNext(null);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\treturn stack.upNext(null);\n\t\t}\n\t};\n\t\n\t/* ifBlock */\n\tjsmm.yy.ElseIfBlock.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.ifBlock, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.upNext(null);\n\t\t}\n\t};\n\t\n\t/* statementList */\n\tjsmm.yy.ElseBlock.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.statementList, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.upNext(null);\n\t\t}\n\t};\n\t\n\t/* expression, statementList */\n\tjsmm.yy.WhileBlock.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.expression, se.scope);\n\t\t\tcase 1:\n\t\t\t\tif (jsmm.func.conditional(this, 'while', se.args[0])) {\n\t\t\t\t\treturn stack.pushElementNext(this.statementList, se.scope);\n\t\t\t\t} else {\n\t\t\t\t\treturn stack.upNext(null);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tse.args.pop(); // pop statementList\n\t\t\t\tse.args.pop(); // pop expression\n\t\t\t\treturn this.stepNext(stack, se);\n\t\t}\n\t};\n\t\n\t/* statement1, expression, statement2, statementList */\n\tjsmm.yy.ForBlock.prototype.stepNext = function(stack, se) {\n\t\tswitch (se.args.length) {\n\t\t\tcase 0:\n\t\t\t\treturn stack.pushElementNext(this.statement1, se.scope);\n\t\t\tcase 1:\n\t\t\t\treturn stack.pushElementNext(this.expression, se.scope);\n\t\t\tcase 2:\n\t\t\t\tif (jsmm.func.conditional(this, 'for', se.args[1])) {\n\t\t\t\t\treturn stack.pushElementNext(this.statementList, se.scope);\n\t\t\t\t} else {\n\t\t\t\t\treturn stack.upNext(null);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\treturn stack.pushElementNext(this.statement2, se.scope);\n\t\t\tcase 4:\n\t\t\t\tse.args.pop(); // pop statement2\n\t\t\t\tse.args.pop(); // pop statementList\n\t\t\t\tse.args.pop(); // pop expression\n\t\t\t\treturn this.stepNext(stack, se);\n\t\t}\n\t};\n\t\n\t/* name, nameArgs, statementList */\n\tjsmm.yy.FunctionDeclaration.prototype.stepNext = function(stack, se) {\n\t\tvar that = this;\n\t\t\n\t\tjsmm.func.funcDecl(this, se.scope, this.name, function() {\n\t\t\tvar vars = {};\n\t\t\tfor (var i=0; i<that.nameArgs.length; i++) {\n\t\t\t\tvars[that.nameArgs[i]] = arguments[i];\n\t\t\t}\n\t\t\tvar scope = new jsmm.func.Scope(vars, se.scope);\n\t\t\tjsmm.func.funcEnter(that, scope);\n\t\t\tstack.pushStackElement(new jsmm.step.StackElement(stack, that.statementList, scope));\n\t\t\t\n\t\t\tvar args = [];\n\t\t\tfor(var name in scope.vars) {\n\t\t\t\targs.push(scope.vars[name].str);\n\t\t\t}\n\t\t\tvar message = that.name + '(' + args.join(', ') + ')';\n\t\t\treturn [new jsmm.msg.Inline(that, function(f) { return f(message); }),\n\t\t\t\tnew jsmm.msg.Line(that, message)];\n\t\t});\n\t\t\n\t\treturn stack.upNext(null);\n\t\t/*\n\t\toutput += 'function' + this.getArgList() + \"{\\n\";\n\t\toutput += 'var jsmmscopeInner = new jsmm.func.Scope({';\n\t\tif (this.nameArgs.length > 0) output += '\"' + this.nameArgs[0] + '\": ' + this.nameArgs[0];\n\t\tfor (var i=1; i<this.nameArgs.length; i++) {\n\t\t\toutput += ', \"' + this.nameArgs[i] + '\": ' + this.nameArgs[i];\n\t\t}\n\t\toutput += '}, jsmmscopeOuter);\\n';\n\t\toutput += 'jsmm.func.funcEnter(' + getEl(this) + ');\\n';\n\t\tif (jsmm.verbose) {\n\t\t\toutput += 'console.log(\"after entering ' + this.name + ':\");\\n';\n\t\t\toutput += 'console.log(jsmmscopeInner);\\n';\n\t\t\toutput += 'console.log(\" \");\\n';\n\t\t}\n\t\toutput += this.statementList.stepNext();\n\t\t//output += 'return jsmm.func.funcReturn(' + getEl(this) + ');\\n';\n\t\toutput += '});';\n\t\treturn output;\n\t\t*/\n\t};\n};\n\n//@ sourceURL=/jsmm/jsmm.step.js"
));

require.define("/jsmm/jsmm.browser.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nmodule.exports = function(jsmm) {\n\trequire('./jsmm.msg')(jsmm);\n\t\n\tjsmm.Browser = function() { return this.init.apply(this, arguments); };\n\t\t\n\tjsmm.Browser.prototype.init = function(text, scope) {\n\t\tthis.code = text || '';\n\t\tthis.scope = scope || {};\n\t\tthis.reset();\n\t};\n\t\n\tjsmm.Browser.prototype.reset = function() {\n\t\tthis.context = null;\n\t\tthis.rawFunc = null;\n\t\tthis.safeFunc = null;\n\t\tthis.stack = null;\n\t\tthis.resetError();\n\t};\n\t\n\tjsmm.Browser.prototype.resetError = function() {\n\t\tthis.error = null;\n\t};\n\t\n\tjsmm.Browser.prototype.setText = function(text) {\n\t\tthis.reset();\n\t\tthis.code = text;\n\t};\n\t\n\tjsmm.Browser.prototype.setScope = function(scope) {\n\t\tthis.reset();\n\t\tthis.scope = scope;\n\t};\n\t\n\tjsmm.Browser.prototype.getCode = function() {\n\t\treturn this.code;\n\t};\n\t\n\tjsmm.Browser.prototype.handleError = function(error) {\n\t\t//console.log(error);\n\t\tif (error instanceof jsmm.msg.Error) {\n\t\t\tthis.error = error;\n\t\t} else {\n\t\t\t//throw error;\n\t\t\tthis.error = new jsmm.msg.Error({}, 'An unknown error has occurred', '', error);\n\t\t}\n\t\t//console.log(this.error);\n\t};\n\t\n\tjsmm.Browser.prototype.parse = function() {\n\t\tthis.resetError();\n\t\tif (this.context !== null) return true;\n\t\t\n\t\ttry {\n\t\t\tthis.context = jsmm.parse(this.code);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tjsmm.Browser.prototype.getElementsByType = function(type) {\n\t\tthis.resetError();\n\t\tif (!this.parse()) return undefined;\n\n\t\treturn this.context.elementsByType[type];\n\t};\n\t\n\tjsmm.Browser.prototype.getDot = function() {\n\t\tthis.resetError();\n\t\tif (!this.parse()) return undefined;\n\t\t\n\t\ttry {\n\t\t\treturn this.context.program.getDot();\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn undefined;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.getRawCode = function() {\n\t\tthis.resetError();\n\t\tif (!this.parse()) return undefined;\n\t\t\n\t\ttry {\n\t\t\treturn this.context.program.getCode();\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn undefined;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.makeRawFunc = function() {\n\t\tthis.resetError();\n\t\tif (this.rawFunc !== null) return true;\n\t\tif (!this.parse()) return false;\n\t\t\n\t\ttry {\n\t\t\tthis.rawFunc = this.context.program.getFunction(this.scope);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn false;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.runRaw = function() {\n\t\tthis.resetError();\n\t\tif (!this.makeRawFunc()) return false;\n\t\t\n\t\ttry {\n\t\t\tthis.rawFunc();\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn false;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.getSafeCode = function() {\n\t\tthis.resetError();\n\t\tif (!this.parse()) return undefined;\n\t\t\n\t\ttry {\n\t\t\treturn this.context.program.getSafeCode();\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn undefined;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.makeSafeFunc = function() {\n\t\tthis.resetError();\n\t\tif (this.safeFunc !== null) return true;\n\t\tif (!this.parse()) return false;\n\t\t\n\t\ttry {\n\t\t\tthis.safeFunc = this.context.program.getSafeFunction(this.scope);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn false;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.runSafe = function() {\n\t\tthis.resetError();\n\t\tif (!this.makeSafeFunc()) return false;\n\t\t\n\t\ttry {\n\t\t\tthis.safeFunc();\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn false;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.stepInit = function() {\n\t\tthis.resetError();\n\t\tif (!this.parse()) return false;\n\t\ttry {\n\t\t\tthis.stack = new jsmm.step.Stack(this.context, this.scope);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn false;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.stepNext = function() {\n\t\tthis.resetError();\n\t\t\n\t\tvar ret = [];\n\t\ttry {\n\t\t\tvar cont;\n\t\t\tdo {\n\t\t\t\tif (this.stack === null || !this.stack.hasNext()) return undefined;\n\t\t\t\t\n\t\t\t\tcont = false;\n\t\t\t\tvar msgs = this.stack.stepNext();\n\t\t\t\tif (msgs.length <= 0) return undefined;\n\t\t\t\t\n\t\t\t\tfor (var i=0; i<msgs.length; i++) {\n\t\t\t\t\tif (msgs[i] instanceof jsmm.msg.Error) {\n\t\t\t\t\t\tthis.error = msgs[i];\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t} else if (msgs[i] instanceof jsmm.msg.Continue) {\n\t\t\t\t\t\tcont = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// don't push jsmm.msg.Continue\n\t\t\t\t\t\tret.push(msgs[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (cont === true);\n\t\t\treturn ret;\n\t\t} catch (error) {\n\t\t\tthis.handleError(error);\n\t\t\treturn undefined;\n\t\t}\n\t};\n\t\n\tjsmm.Browser.prototype.isStepping = function() {\n\t\treturn (this.stack !== null && this.stack.hasNext());\n\t};\n\t\n\tjsmm.Browser.prototype.runStep = function() {\n\t\tthis.resetError();\n\t\t\n\t\tif (this.stepInit()) {\n\t\t\tvar step;\n\t\t\tdo {\n\t\t\t\tstep = this.stepNext();\n\t\t\t} while(step !== undefined);\n\t\t}\n\t\t\n\t\treturn !this.hasError();\n\t};\n\t\n\tjsmm.Browser.prototype.hasError = function() {\n\t\treturn this.error !== null;\n\t};\n\t\n\tjsmm.Browser.prototype.getError = function() {\n\t\treturn this.error;\n\t};\n};\n\n//@ sourceURL=/jsmm/jsmm.browser.js"
));

require.define("/jsmm/jsmm.test.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true*/\n\"use strict\";\n\nmodule.exports = function(jsmm) {\n\trequire('./jsmm.browser')(jsmm);\n\trequire('./jsmm.msg')(jsmm);\n\t\n\tjsmm.test = {};\n\t\n\tjsmm.test.Console = function() {\n\t\tthis.result = '';\n\t};\n\t\n\tjsmm.test.Console.prototype.log = function(str) {\n\t\tthis.result += str + '\\n';\n\t};\n\t\n\tjsmm.test.runAll = function() {\n\t\tjsmm.test.output = '';\n\t\tvar failed = 0;\n\t\tvar name;\n\n\t\tfor (name in jsmm.test.tests.succeed) {\n\t\t\tif (!jsmm.test.runTest(name.replace(/_/g, ' '), jsmm.test.tests.succeed[name], true, true)) failed++;\n\t\t}\n\t\tfor (name in jsmm.test.tests.fail_threeway) {\n\t\t\tif (!jsmm.test.runTest(name.replace(/_/g, ' '), jsmm.test.tests.fail_threeway[name], true, false)) failed++;\n\t\t}\n\t\tfor (name in jsmm.test.tests.fail_twoway) {\n\t\t\tif (!jsmm.test.runTest(name.replace(/_/g, ' '), jsmm.test.tests.fail_twoway[name], false, false)) failed++;\n\t\t}\n\t\tif (failed <= 0) {\n\t\t\tjsmm.test.output += 'All tests completed successfully!';\n\t\t} else if (failed === 1) {\n\t\t\tjsmm.test.output += 'Unfortunately 1 test failed...';\n\t\t} else {\n\t\t\tjsmm.test.output += 'Unfortunately ' + failed + ' tests failed...';\n\t\t}\n\t\treturn failed <= 0;\n\t};\n\n\tjsmm.test.printError1 = function(name, name1, error1, code) {\n\t\tjsmm.test.output += 'In test \"' + name + '\" ' + name1 + ' was incorrect.\\n';\n\t\tjsmm.test.output += name1 + ':\\n' + error1 + '\\n';\n\t\tjsmm.test.output += 'code:\\n' + code + '\\n';\n\t};\n\t\n\tjsmm.test.printError2 = function(name, name1, name2, error1, error2, code) {\n\t\tjsmm.test.output += 'In test \"' + name + '\" ' + name1 + ' and ' + name2 + ' were incorrect.\\n';\n\t\tjsmm.test.output += name1 + ':\\n' + error1 + '\\n';\n\t\tjsmm.test.output += name2 + ':\\n' + error2 + '\\n';\n\t\tjsmm.test.output += 'code:\\n' + code + '\\n';\n\t};\n\t\n\tjsmm.test.runTest = function(name, code, threeway, succeed) {\n\t\tvar consoleRaw = new jsmm.test.Console();\n\t\tvar consoleSafe = new jsmm.test.Console();\n\t\tvar consoleStep = new jsmm.test.Console();\n\t\tvar errorRaw = null;\n\t\tvar errorSafe = null;\n\t\tvar errorStep = null;\n\t\tvar browser = new jsmm.Browser(code);\n\t\t\n\t\tif (threeway) {\n\t\t\tbrowser.setScope({console: consoleRaw});\n\t\t\tif (!browser.runRaw()) {\n\t\t\t\terrorRaw = browser.getError();\n\t\t\t}\n\t\t}\n\t\t\n\t\tbrowser.setScope({console: consoleSafe});\n\t\tif (!browser.runSafe()) {\n\t\t\terrorSafe = browser.getError();\n\t\t}\n\t\t\n\t\tbrowser.setScope({console: consoleStep});\n\t\tif (!browser.runStep()) {\n\t\t\terrorStep = browser.getError();\n\t\t}\n\t\t\n\t\t// when it should threeway we can compare against the raw result\n\t\tif (threeway && !jsmm.test.compareErrors(errorRaw, errorSafe, succeed)) {\n\t\t\tjsmm.test.printError2(name, 'errorRaw', 'errorSafe', errorRaw, errorSafe, code);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (!jsmm.test.compareErrors(errorSafe, errorStep, succeed)) {\n\t\t\tjsmm.test.printError2(name, 'errorSafe', 'errorStep', errorSafe, errorStep, code);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (threeway && consoleRaw.result !== consoleSafe.result) {\n\t\t\tjsmm.test.printError2(name, 'consoleRaw', 'consoleSafe', consoleRaw.result, consoleSafe.result, code);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (consoleSafe.result !== consoleStep.result) {\n\t\t\tjsmm.test.printError2(name, 'consoleSafe', 'consoleStep', consoleSafe.result, consoleStep.result, code);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (threeway && succeed !== (errorRaw === null)) {\n\t\t\tjsmm.test.printError1(name, 'errorRaw', errorRaw, code);\n\t\t\treturn false;\n\t\t}\n\n\t\tif (succeed !== (errorSafe === null)) {\n\t\t\tjsmm.test.printError1(name, 'errorSafe', errorSafe, code);\n\t\t\treturn false;\n\t\t}\n\n\t\t// no need to check errorStep for null, since otherwise it would have been caught when comparing errors\n\t\t\n\t\tjsmm.test.output += 'Test \"' + name + '\" completed successfully!\\n';\n\t\treturn true;\n\t};\n\t\n\tjsmm.test.compareErrors = function(error1, error2) {\n\t\tif (error1 === null && error2 === null) {\n\t\t\treturn true;\n\t\t} else if (error1 === null || error2 === null) {\n\t\t\treturn false;\n\t\t} else if (error1.orig !== null || error2.orig !== null) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn error1.html === error2.html;\n\t\t}\n\t};\n\t\n\tjsmm.test.tests = { succeed: {}, fail_threeway: {}, fail_twoway: {}};\n\t\n\tjsmm.test.tests.succeed.comments =\n\t'// one line comment' + '\\n' +\n\t'var a;' + '\\n' +\n\t'/*start of line comment*/var a; // end of line comment... with some crazy stuff here *// ***//// / * */' + '\\n' +\n\t'/*start of line comment*/var a; /* end of line comment... with some crazy stuff here * // ***//// / *' + '\\n' +\n\t'/*start of line comment*/var a;/* multiline' + '\\n' +\n\t'comment with * and / and /* and /***...' + '\\n' +\n\t'var a;' + '\\n' +\n\t'and also // and ///*** and more! */' + '\\n' +\n\t'var a;' + '\\n' +\n\t'console.log(\"Hello world!\");';\n\t\n\tjsmm.test.tests.succeed.assignments =\n\t'// variable assignments' + '\\n' +\n\t'var a;' + '\\n' +\n\t'a = 0;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'var a = 5;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'var b = a*a+a/a-a%a+(a*a*a-a);' + '\\n' +\n\t'console.log(b);' + '\\n' +\n\t'var c=b, d=c, e=d;' + '\\n' +\n\t'console.log(e);' + '\\n' +\n\t'c = b==c && c==d && d==b;' + '\\n' +\n\t'console.log(c);' + '\\n' +\n\t'd = c || b > d;' + '\\n' +\n\t'console.log(d);' + '\\n' +\n\t'e = (1>2 && 1>=2 && 2<1 && 2<=1) || 2 != 1;' + '\\n' +\n\t'console.log(e);' + '\\n' +\n\t'var f = -5 > +3 || !false;' + '\\n' +\n\t'console.log(f);' + '\\n' +\n\t'f = !(f || false) || false;' + '\\n' +\n\t'console.log(f);' + '\\n' +\n\t'a = 1.4E-02;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a += a;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a *= a;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a -= a/10;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a /= 0.003;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a %= 10;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a++;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a--;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'a = 5+3*5+1+9*10/5%2+18/23-52/16%82-53*32;' + '\\n' +\n\t'console.log(a);' + '\\n' +\n\t'var str=\"\";' + '\\n' +\n\t'console.log(str);' + '\\n' +\n\t'str += \"hi\";' + '\\n' +\n\t'console.log(str);' + '\\n' +\n\t'str += 10;' + '\\n' +\n\t'console.log(str);' + '\\n' +\n\t'str = 5+5+str;' + '\\n' +\n\t'console.log(str);' + '\\n' +\n\t'var len = str.length;' + '\\n' +\n\t'console.log(len);';\n\t\n\tjsmm.test.tests.succeed.control =\n\t'// control structures' + '\\n' +\n\t'var f=true, e=!f;' + '\\n' +\n\t'if (true) {' + '\\n' +\n\t'  console.log(true);' + '\\n' +\n\t'  if (f && e && false) {' + '\\n' +\n\t'    console.log(false);' + '\\n' +\n\t'  } else {' + '\\n' +\n\t'    if (false) {' + '\\n' +\n\t'      console.log(false);' + '\\n' +\n\t'    } else if (true) {' + '\\n' +\n\t'      if(true) {' + '\\n' +\n\t'        console.log(\"a\");' + '\\n' +\n\t'      }' + '\\n' +\n\t'      if(false) {' + '\\n' +\n\t'        console.log(\"b\");' + '\\n' +\n\t'      }' + '\\n' +\n\t'      console.log(true);' + '\\n' +\n\t'    }' + '\\n' +\n\t'  }' + '\\n' +\n\t'}' + '\\n' +\n\t'' + '\\n' +\n\t'var i=0;' + '\\n' +\n\t'while (i<10) {' + '\\n' +\n\t'  console.log(i*i-i);' + '\\n' +\n\t'  i++;' + '\\n' +\n\t'}' + '\\n' +\n\t'' + '\\n' +\n\t'for (var j=0; j<10; j++) {' + '\\n' +\n\t'  console.log(j);' + '\\n' +\n\t'}';\n\t\n\tjsmm.test.tests.succeed.functions_simple =\n\t'// functions simple' + '\\n' +\n\t'function f1(n) {' + '\\n' +\n\t'  console.log(n*100);' + '\\n' +\n\t'}' + '\\n' +\n\t'function f2(n) {' + '\\n' +\n\t'  return n*100;' + '\\n' +\n\t'}' + '\\n' +\n\t'f1(10);' + '\\n' +\n\t'console.log(f2(20));';\n\t\n\tjsmm.test.tests.succeed.functions_complex =\n\t'// functions complex' + '\\n' +\n\t'var a, b=100, c=\"test\", d=1000;' + '\\n' +\n\t'function f1(a, b, c, q1, q2, q3) {' + '\\n' +\n\t'  console.log(a+d);' + '\\n' +\n\t'  console.log(f2(b*3)/3);' + '\\n' +\n\t'  console.log(f3(b, c));' + '\\n' +\n\t'  console.log((q1+q2)%q3);' + '\\n' +\n\t'}' + '\\n' +\n\t'function f2(n) {' + '\\n' +\n\t'  var c = n;' + '\\n' +\n\t'  return n+(3/c);' + '\\n' +\n\t'}' + '\\n' +\n\t'function f3(a,b) {' + '\\n' +\n\t'  console.log(a);' + '\\n' +\n\t'  console.log(b);' + '\\n' +\n\t'  for (var c=0; c>-100; c--) {' + '\\n' +\n\t'    a *= b;' + '\\n' +\n\t'  }' + '\\n' +\n\t'  return a+b;' + '\\n' +\n\t'}' + '\\n' +\n\t'var x=5, y=10, z=15;' + '\\n' +\n\t'f1(x,y,z, 8, 9, 10, \"test\", \"blah\", \"more blah\");';\n\t\n\tjsmm.test.tests.fail_threeway.missing_semicolon_1 = 'var a';\n\tjsmm.test.tests.fail_threeway.missing_semicolon_2 = 'var a=5*5';\n\tjsmm.test.tests.fail_threeway.missing_semicolon_3 = 'var a;\\n a=5*5';\n\tjsmm.test.tests.fail_threeway.missing_semicolon_4 = 'var a;\\n if (a) {\\n a=5*5 \\n}';\n\tjsmm.test.tests.fail_threeway.missing_semicolon_5 = 'console.log(5)';\n\tjsmm.test.tests.fail_threeway.missing_semicolon_6 = 'var a;\\n a+=a';\n\tjsmm.test.tests.fail_threeway.missing_semicolon_7 = 'for(var a=0 a<5; a++) {\\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_1 = 'if (true) \\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_2 = 'if (true) {';\n\tjsmm.test.tests.fail_threeway.missing_bracket_3 = 'while (true) \\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_4 = 'while (true) {';\n\tjsmm.test.tests.fail_threeway.missing_bracket_5 = 'for (var i=0; i<10; i++) \\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_6 = 'for (var i=0; i<10; i++) {\\n';\n\tjsmm.test.tests.fail_threeway.missing_bracket_7 = 'if (true) {\\n } else \\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_8 = 'if (true) {\\n } else { \\n';\n\tjsmm.test.tests.fail_threeway.missing_bracket_9 = 'if (true) {\\n  else { \\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_10 = 'if (true) \\n } else { \\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_11 = 'if (5>(5+5) {\\n }';\n\tjsmm.test.tests.fail_threeway.missing_bracket_12 = 'if 5>5) {\\n }';\n\tjsmm.test.tests.fail_threeway.incorrect_string_1 = 'var str = \"Hello World!;';\n\tjsmm.test.tests.fail_threeway.incorrect_string_2 = 'var str = \"Hello World!';\n\tjsmm.test.tests.fail_threeway.incorrect_string_3 = 'var str = Hello World!\";';\n\tjsmm.test.tests.fail_threeway.incorrect_string_4 = 'var str = \"Hello World!\\n\";';\n\tjsmm.test.tests.fail_threeway.incorrect_string_5 = 'var str = \"Hello \\\\World!\\n\";';\n\tjsmm.test.tests.fail_threeway.reserved_word_1 = 'var jsmmscope;';\n\tjsmm.test.tests.fail_threeway.reserved_word_2 = 'var jsmmscopeInner;';\n\tjsmm.test.tests.fail_threeway.reserved_word_3 = 'var jsmmscopeOuter;';\n\tjsmm.test.tests.fail_threeway.reserved_word_4 = 'var jsmm;';\n\tjsmm.test.tests.fail_threeway.reserved_word_5 = 'var jsmmparser;';\n\tjsmm.test.tests.fail_threeway.reserved_word_6 = 'var jsmmExecutionCounter;';\n\tjsmm.test.tests.fail_threeway.reserved_word_7 = 'var NaN;';\n\tjsmm.test.tests.fail_threeway.reserved_word_8 = 'var this;';\n\tjsmm.test.tests.fail_threeway.reserved_word_9 = 'var arguments;';\n\t\n\tjsmm.test.tests.fail_twoway.unary_1 = 'console.log(+true);';\n\tjsmm.test.tests.fail_twoway.unary_2 = 'console.log(-false);';\n\tjsmm.test.tests.fail_twoway.unary_3 = 'console.log(+\"string\");';\n\tjsmm.test.tests.fail_twoway.unary_4 = 'console.log(-\"string\");';\n\tjsmm.test.tests.fail_twoway.unary_5 = 'console.log(!\"string\");';\n\tjsmm.test.tests.fail_twoway.unary_6 = 'console.log(!5);';\n\tjsmm.test.tests.fail_twoway.invalid_funcion_call_1 = 'function f(a, b) {\\n return a;\\n }\\n f(1);';\n\tjsmm.test.tests.fail_twoway.invalid_funcion_call_2 = 'function f(a, b) {\\n return a+b;\\n }\\n f(1);';\n\t//jsmm.test.tests.fail_twoway.repeated_declaration_1 = 'var a;\\n var a;';\n\t//jsmm.test.tests.fail_twoway.repeated_declaration_2 = 'var a = 1;\\n var a;';\n};\n\n//@ sourceURL=/jsmm/jsmm.test.js"
));

require.define("/basiceditor/index.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true jquery:true*/\n\"use strict\";\n\nvar based = {};\n\nbased.Editor = function() { return this.init.apply(this, arguments); };\nbased.Code = function() { return this.init.apply(this, arguments); };\n\t\nbased.Code.prototype = {\n\tinit: function(text) {\n\t\tthis.text = '' + text;\n\t},\n\tgetText: function() {\n\t\treturn this.text;\n\t},\n\tgetLine: function(line) {\n\t\tthis.makeLines();\n\t\treturn this.lines[line-1];\n\t},\n\tlineColumnToOffset: function(line, column) {\n\t\tthis.makeOffsets();\n\t\treturn this.offsets[line-1] + column;\n\t},\n\tposToOffset: function(pos) {\n\t\treturn this.lineColumnToOffset(pos.line, pos.column);\n\t},\n\trangeToText: function(startPos, endPos) {\n\t\treturn this.text.substring(this.posToOffset(startPos), this.posToOffset(endPos));\n\t},\n\tlineColumnToPositionText: function(line, column) {\n\t\tthis.makeLines();\n\t\treturn new Array(line).join('\\n') + (this.lines[line-1] || '').substring(0, column);\n\t},\n\telToText: function(el) {\n\t\treturn this.rangeToText(el.startPos, el.endPos);\n\t},\n\toffsetToPos: function(offset) {\n\t\tthis.makeOffsets();\n\t\t// TODO: implement binary search\n\t\tfor (var i=0; i<this.lines.length; i++) {\n\t\t\tif (offset < this.offsets[i]) {\n\t\t\t\treturn {line: i, column: offset-(this.offsets[i-1] || 0)};\n\t\t\t}\n\t\t}\n\t\treturn {line: this.lines.length, column: offset-this.offsets[this.lines.length-1]};\n\t},\n\tinsertAtOffset: function(offset, text) {\n\t\treturn this.text.substring(0, offset) + text + this.text.substring(offset);\n\t},\n\tremoveAtOffsetRange: function(offset1, offset2) {\n\t\treturn this.text.substring(0, offset1) + this.text.substring(offset2);\n\t},\n\t/// INTERNAL FUNCTIONS ///\n\tmakeLines: function() {\n\t\tif (this.lines !== undefined) return;\n\t\tthis.lines = this.text.split(/\\n/);\n\t},\n\tmakeOffsets: function() {\n\t\tif (this.offsets !== undefined) return;\n\t\tthis.makeLines();\n\t\tthis.offsets = [0];\n\t\tfor (var i=1; i<this.lines.length; i++) {\n\t\t\t// add one for the actual newline character\n\t\t\tthis.offsets[i] = this.offsets[i-1] + this.lines[i-1].length + 1;\n\t\t}\n\t}\n};\n\nbased.Editor.prototype = {\n\tinit: function($div) {\n\t\tvar that = this;\n\n\t\tthis.$div = $div;\n\t\tthis.$div.addClass('based-editor');\n\n\t\t// setting up textarea\n\t\tthis.$textarea = $('<textarea class=\"based-code\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" wrap=\"off\"></textarea>');\n\t\tthis.$div.append(this.$textarea);\n\t\tthis.$textarea.bind('keydown', function(e) { that.keydown(e); });\n\t\tthis.$textarea.bind('keyup', function(e) { that.keyup(e); });\n\t\tthis.$textarea.bind('paste', function(e) { that.paste(e); });\n\n\t\t// setting up mirror\n\t\tthis.$mirror = $('<div class=\"based-mirror\"></div>');\n\t\tthis.$mirrorContainer = $('<div class=\"based-mirror-container\"></div>');\n\t\tthis.$mirrorContainer.append(this.$mirror);\n\t\tthis.$div.append(this.$mirrorContainer);\n\n\t\t// setting up margin\n\t\tthis.$marginArrow = $('<div class=\"based-margin-arrow\"><img src=\"img/arrow_right.png\"/></div>');\n\t\tthis.$marginError = $('<div class=\"based-margin-error\"><img src=\"img/exclamation.png\"/></div>');\n\t\tthis.$marginArrow.click(function(e) { that.toggleMesssage(); });\n\t\tthis.$marginError.click(function(e) { that.toggleMesssage(); });\n\n\t\tthis.$margin = $('<div class=\"based-margin\"></div>');\n\t\tthis.$margin.append(this.$marginArrow);\n\t\tthis.$margin.append(this.$marginError);\n\t\tthis.$div.append(this.$margin);\n\t\t\n\t\t// setting up messages\n\t\tthis.$messagebox = $('<div class=\"based-messagebox\"><div class=\"arrow\"></div><div class=\"based-message\"></div></div>');\n\t\tthis.$div.append(this.$messagebox);\n\t\tthis.$messageMarking = this.addMarking(0,0,0,0, 'based-message-marking');\n\t\tthis.$messageMarking.hide();\n\n\t\tthis.$messagebox.click(function(e) { that.toggleMesssage(); });\n\t\tthis.$messageMarking.click(function(e) { that.toggleMesssage(); });\n\n\t\tthis.callbacks = {\n\t\t\ttextChange: function() {}\n\t\t};\n\n\t\tthis.reset();\n\t},\n\n\treset: function() {\n\t\tthis.code = new based.Code('');\n\t\tthis.messageOpen = false;\n\t\tthis.renderedError = false;\n\t\tthis.editables = [];\n\t\tthis.clearDebugState();\n\t},\n\n\tclearDebugState: function() {\n\t\tthis.debugState = {\n\t\t\tmessage: null\n\t\t};\n\n\t\t/*\n\t\t$('#margin .lineMsg').fadeOut(100, function() {\n\t\t\t$(this).remove();\n\t\t});\n\t\t*/\n\t},\n\n\tgetCode: function() {\n\t\treturn this.code;\n\t},\n\n\tsetCode: function(code) {\n\t\tthis.$textarea.val(code);\n\t\tthis.updateCode();\n\t\tthis.updateSize();\n\t\tthis.clearDebugState();\n\t},\n\n\tsetMessage: function(message) {\n\t\tthis.debugState.message = message;\n\n\t\tif (!this.renderedError && message.type === 'Error') {\n\t\t\tthis.messageOpen = false;\n\t\t}\n\t},\n\n\tclearMessage: function() {\n\t\tthis.debugState.message = null;\n\t},\n\n\topenMessage: function() {\n\t\tthis.messageOpen = true;\n\t},\n\n\tsetCallback: function(name, func) {\n\t\tthis.callbacks[name] = func;\n\t},\n\n\trender: function() {\n\t\tthis.renderMessage();\n\t},\n\n\tmakeEditable: function(elements) {\n\t\tfor (var i=0; i<elements.length; i++) {\n\t\t\tvar el = elements[i];\n\t\t\tvar startPos = this.getPosition(this.code.lineColumnToPositionText(el.startPos.line, el.startPos.column));\n\t\t\tvar endPos = this.getPosition(this.code.lineColumnToPositionText(el.endPos.line, el.endPos.column));\n\t\t\tvar editable = this.addEditable(startPos.x, startPos.y, endPos.x-startPos.x, 0, 'blah');\n\t\t\tthis.editables.push(editable);\n\t\t}\n\t},\n\n\t/// INTERNAL FUNCTIONS ///\n\trunCallback: function(name) {\n\t\tif (this.callbacks[name] !== undefined) {\n\t\t\tthis.callbacks[name].apply(this, [].slice.call(arguments, 1));\n\t\t}\n\t},\n\n\taddMarking: function(x, y, width, height) {\n\t\tvar $marking = $('<div class=\"based-marking\"></div>');\n\t\tthis.updateMarking($marking, x, y, width, height);\n\t\tthis.$div.append($marking);\n\t\treturn $marking;\n\t},\n\n\tupdateMarking: function($marking, x, y, width, height) {\n\t\tvar offset = this.getTextAreaOffset();\n\t\t$marking.css('left', x + offset.x);\n\t\t$marking.css('top', y + offset.y);\n\t\t$marking.width(width);\n\t\t$marking.height(height);\n\t},\n\n\taddBox: function(x, y, html, markingWidth) {\n\t\tvar $box = $('<div class=\"based-messagebox\"><div class=\"arrow\"></div><div class=\"based-message\"></div></div>');\n\t\tthis.$div.append($box);\n\t\tthis.updateBox($box, x, y, html, markingWidth);\n\t\t$box.hide();\n\t\treturn $box;\n\t},\n\n\tupdateBox: function($box, x, y, html, markingWidth) {\n\t\tmarkingWidth = markingWidth || 0;\n\t\tvar offset = this.getTextAreaOffset();\n\t\tvar $content = $box.children('.based-message');\n\n\t\t$content.html(html);\n\n\t\tvar visible = $box.is(\":visible\");\n\t\t$box.show();\n\t\t$box.css('left', x + offset.x - $box.outerWidth()/2 + markingWidth/2);\n\t\t$box.css('top', y + offset.y);\n\t\tif (!visible) $box.hide();\n\n\t\treturn $box;\n\t},\n\n\taddEditable: function(x, y, width, height, content) {\n\t\tvar $marking = this.addMarking(x, y, width, height);\n\t\tvar $box = this.addBox(x, y, content, width);\n\n\t\t$marking.click(function(e) {\n\t\t\t$box.fadeToggle(100);\n\t\t});\n\n\t\treturn {marking: $marking, box: $box};\n\t},\n\n\tgetPosition: function(text) {\n\t\t// add a space because of a bug when text contains only newlines\n\t\ttext += ' ';\n\t\tthis.$mirror.text(text);\n\t\tthis.$mirror.text(text); // TODO: find out why this is here twice\n\t\treturn {x: this.$mirror.outerWidth(), y: this.$mirror.outerHeight()};\n\t},\n\n\tgetTextAreaOffset: function() {\n\t\t// the offset is weird since .position().top changes when scrolling\n\t\treturn {\n\t\t\tx: (this.$textarea.position().left + this.$div.scrollLeft()),\n\t\t\ty: (this.$textarea.position().top + this.$div.scrollTop())\n\t\t};\n\t},\n\t\n\trenderMessage: function() {\n\t\tthis.renderedError = false;\n\n\t\tif (this.debugState.message === null) {\n\t\t\tthis.$messagebox.fadeOut(100);\n\t\t\tthis.$messageMarking.fadeOut(100);\n\t\t\tthis.$marginArrow.fadeOut(100);\n\t\t\tthis.$marginError.fadeOut(100);\n\t\t\tthis.$textarea.removeClass('based-stepping');\n\t\t\tthis.$textarea.removeClass('based-error');\n\t\t} else {\n\t\t\tvar msg = this.debugState.message;\n\n\t\t\tvar startPos = this.getPosition(this.code.lineColumnToPositionText(msg.line, msg.column));\n\t\t\tvar width = 0;\n\t\t\tif (msg.column2 > msg.column) {\n\t\t\t\tvar endPos = this.getPosition(this.code.lineColumnToPositionText(msg.line, msg.column2));\n\t\t\t\twidth = endPos.x - startPos.x;\n\t\t\t}\n\n\t\t\tvar offset = this.getTextAreaOffset();\n\n\t\t\tif (width > 0 && this.messageOpen) {\n\t\t\t\tthis.updateMarking(this.$messageMarking, startPos.x, startPos.y, width, 0);\n\t\t\t\tthis.$messageMarking.fadeIn(100);\n\t\t\t} else {\n\t\t\t\tthis.$messageMarking.fadeOut(100);\n\t\t\t}\n\n\t\t\tif (this.messageOpen) {\n\t\t\t\tthis.updateBox(this.$messagebox, startPos.x, startPos.y, msg.html, width);\n\t\t\t\tthis.$messagebox.fadeIn(100);\n\t\t\t} else {\n\t\t\t\tthis.$messagebox.fadeOut(100);\n\t\t\t}\n\t\t\t\n\t\t\tif (msg.type === 'Error'){\n\t\t\t\tthis.$marginError.css('top', startPos.y + offset.y);\n\t\t\t\tthis.$marginError.fadeIn(100);\n\t\t\t\tthis.$marginArrow.fadeOut(100);\n\t\t\t\tthis.$textarea.addClass('based-error');\n\t\t\t\tthis.$textarea.removeClass('based-stepping');\n\t\t\t\tthis.renderedError = true;\n\t\t\t} else {\n\t\t\t\tthis.$marginArrow.css('top', startPos.y + offset.y);\n\t\t\t\tthis.$marginArrow.fadeIn(100);\n\t\t\t\tthis.$marginError.fadeOut(100);\n\t\t\t\tthis.$textarea.addClass('based-stepping');\n\t\t\t\tthis.$textarea.removeClass('based-error');\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (msg instanceof jsmm.msg.Line) {\n\t\t\t\tvar message = msg.message;\n\t\t\t\t\n\t\t\t\tvar lineMsg = $('#lineMsg-' + msg.line);\n\t\t\t\tif (lineMsg.length <= 0) {\n\t\t\t\t\tlineMsg = $('<div class=\"lineMsg\"></div>');\n\t\t\t\t\tlineMsg.attr('id', 'lineMsg-' + msg.line);\n\t\t\t\t\t$('#margin').append(lineMsg);\n\t\t\t\t\tlineMsg.fadeIn(100);\n\t\t\t\t\tlineMsg.css('top', startPos.y + offset.y);\n\t\t\t\t} else {\n\t\t\t\t\tif (lineMsg.text().length > 0 && msg.append) {\n\t\t\t\t\t\tmessage = lineMsg.text() + ', ' + msg.message;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlineMsg.text(message);\n\t\t\t}\n\t\t\t*/\n\t\t}\n\t},\n\n\tupdateCode: function() {\n\t\tthis.code = new based.Code(this.$textarea.val());\n\t},\n\n\tupdateSize: function() {\n\t\t// NOTE: getPosition is not necessarily suitable for this\n\t\tthis.$textarea.height(this.getPosition(this.$textarea.val()).y + 100);\n\t\tthis.$textarea.width(this.getPosition(this.$textarea.val()).x + 100);\n\t},\n\n\t// TODO: use http://archive.plugins.jquery.com/project/fieldselection\n\tautoindent: function(e) {\n\t\t// 13 = enter, 221 = ] or }\n\t\tif (e.keyCode === 13 || e.keyCode === 221) {\n\t\t\tvar code = this.code;\n\t\t\tvar offset = this.$textarea[0].selectionStart;\n\t\t\tvar pos = code.offsetToPos(offset);\n\t\t\tif (pos.line > 1) {\n\t\t\t\tvar prevLine = code.getLine(pos.line-1);\n\t\t\t\tvar curLine = code.getLine(pos.line);\n\t\t\t\tvar spaces = prevLine.match(/^ */)[0].length;\n\t\t\t\tvar spacesAlready = curLine.match(/^ */)[0].length;\n\t\t\t\tspaces += prevLine.match(/\\{ *$/) !== null ? 2 : 0;\n\t\t\t\tspaces -= spacesAlready;\n\t\t\t\tspaces -= curLine.match(/^ *\\}/) !== null ? 2 : 0;\n\n\t\t\t\tvar startOffset, endOffset;\n\t\t\t\tif (spaces > 0) {\n\t\t\t\t\tstartOffset = code.lineColumnToOffset(pos.line, 0);\n\t\t\t\t\tthis.$textarea.val(code.insertAtOffset(startOffset, new Array(spaces+1).join(' ')));\n\t\t\t\t\tthis.$textarea[0].selectionStart = offset + spaces;\n\t\t\t\t\tthis.$textarea[0].selectionEnd = this.$textarea[0].selectionStart;\n\t\t\t\t\tthis.updateCode();\n\t\t\t\t} else if (spaces < 0 && spacesAlready >= -spaces) {\n\t\t\t\t\tstartOffset = code.lineColumnToOffset(pos.line, 0);\n\t\t\t\t\tendOffset = startOffset-spaces;\n\t\t\t\t\tthis.$textarea.val(code.removeAtOffsetRange(startOffset, endOffset));\n\t\t\t\t\tthis.$textarea[0].selectionStart = offset + spaces;\n\t\t\t\t\tthis.$textarea[0].selectionEnd = this.$textarea[0].selectionStart;\n\t\t\t\t\tthis.updateCode();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tkeydown: function(e) {\n\t\tif (this.$textarea.val() !== this.code.getText()) {\n\t\t\tthis.updateSize();\n\n\t\t\tthis.$marginArrow.hide();\n\t\t\tthis.$marginError.hide();\n\t\t\tthis.$messagebox.hide();\n\t\t\tthis.$messageMarking.hide();\n\t\t}\n\t\t// TODO: include offset vars and update UI elements\n\t},\n\n\tkeyup: function(e) {\n\t\tif (this.$textarea.val() !== this.code.getText()) {\n\t\t\tthis.updateSize(); // TODO: remove?\n\t\t\tthis.updateCode();\n\t\t\tthis.autoindent(e);\n\t\t\tthis.runCallback('textChange');\n\t\t}\n\t},\n\n\tpaste: function(e) {\n\t\tif (this.$textarea.val() !== this.code.getText()) {\n\t\t\tthis.updateSize();\n\t\t\tthis.updateCode();\n\t\t\tthis.autoindent(e);\n\t\t\tthis.runCallback('textChange');\n\t\t}\n\t},\n\n\ttoggleMesssage: function() {\n\t\tthis.messageOpen = !this.messageOpen;\n\t\tthis.renderMessage();\n\t}\n\t\n};\n\nmodule.exports = based;\n\n//@ sourceURL=/basiceditor/index.js"
));

require.define("/cli-widget.js", Function(
    [ 'require', 'module', 'exports', '__dirname', '__filename' ],
    "/*jshint node:true jquery:true*/\n\"use strict\";\n\nvar jsmm = require('./jsmm');\nvar based = require('./basiceditor');\n\n$(function() {\n\tif (window.localStorage.getItem('1') === null) {\n\t\twindow.localStorage.setItem('1', '// Some example code\\nfunction cube(n) {\\n  return n*n*n;\\n}\\n\\nfor (var i=0; i<10; i++) {\\n  var output = cube(i);\\n  console.log(i + \": \" + output);\\n}\\n');\n\t}\n\n\tvar canvas = document.getElementById('canvas');\n\tvar context = canvas.getContext('2d');\n\t\n\tvar myConsole = {\n\t\tlog: function(text) {\n\t\t\t$('#console').val($('#console').val() + (text || '') + '\\n');\n\t\t},\n\t\tlineLog: function(text) {\n\t\t\t$('#console').val($('#console').val() + (text || ''));\n\t\t},\n\t\tclear: function() {\n\t\t\t$('#console').val('');\n\t\t}\n\t};\n\n\tvar myCanvas = {\n\t\tclear: function() {\n\t\t\t//$('#canvas').width($('#canvas').width());\n\t\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\tcontext = canvas.getContext('2d');\n\t\t\tcontext.beginPath();\n\t\t\tcontext.strokeStyle = \"#00dd00\";\n\t\t\tcontext.fillStyle = \"rgba(50, 250, 50, 0.4)\";\n\t\t},\n\t\tarc: function() {\n\t\t\tcontext.arc.apply(context, arguments);\n\t\t},\n\t\tbeginPath: function() {\n\t\t\tcontext.beginPath.apply(context, arguments);\n\t\t},\n\t\tclosePath: function() {\n\t\t\tcontext.closePath.apply(context, arguments);\n\t\t},\n\t\tfill: function() {\n\t\t\tcontext.fill.apply(context, arguments);\n\t\t},\n\t\tstroke: function() {\n\t\t\tcontext.stroke.apply(context, arguments);\n\t\t},\n\t\tclip: function() {\n\t\t\tcontext.clip.apply(context, arguments);\n\t\t},\n\t\tmoveTo: function() {\n\t\t\tcontext.moveTo.apply(context, arguments);\n\t\t},\n\t\tlineTo: function() {\n\t\t\tcontext.lineTo.apply(context, arguments);\n\t\t},\n\t\tarcTo: function() {\n\t\t\tcontext.arcTo.apply(context, arguments);\n\t\t},\n\t\tbezierCurveTo: function() {\n\t\t\tcontext.bezierCurveTo.apply(context, arguments);\n\t\t},\n\t\tquadraticCurveTo: function() {\n\t\t\tcontext.quadraticCurveTo.apply(context, arguments);\n\t\t},\n\t\trect: function() {\n\t\t\tcontext.rect.apply(context, arguments);\n\t\t}\n\t};\n\t\n\tvar realConsole = {\n\t\tlog: function(text) {\n\t\t\tif (console && console.log) {\n\t\t\t\tconsole.log(text);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar browser = new jsmm.Browser();\n\tvar editor = new based.Editor($('#editor'));\n\n\teditor.setCode(window.localStorage.getItem('1'));\n\n\tvar clear = function() {\n\t\tmyConsole.clear();\n\t\tmyCanvas.clear();\n\t};\n\t\n\tvar run = function(text) {\n\t\tvar code = editor.getCode().getText();\n\t\twindow.localStorage.setItem('1', code);\n\t\tbrowser.setText(code);\n\t\tbrowser.setScope({console: myConsole, canvas: myCanvas});\n\n\t\tclear();\n\t\tbrowser.runSafe();\n\t\t\n\t\tif (browser.hasError()) {\n\t\t\teditor.setMessage(browser.getError());\n\t\t} else {\n\t\t\teditor.clearMessage();\n\t\t}\n\t\teditor.render();\n\t};\n\n\teditor.setCallback('textChange', run);\n\t\n\tvar step = function() {\n\t\tif (browser.hasError()) return;\n\t\t\n\t\tif (!browser.isStepping()) {\n\t\t\tclear();\n\t\t\tbrowser.stepInit();\n\t\t\teditor.openMessage();\n\t\t}\n\t\tvar msgs = browser.stepNext();\n\t\tif (browser.hasError()) {\n\t\t\teditor.setMessage(browser.getError());\n\t\t} else if (msgs === undefined) {\n\t\t\teditor.clearMessage();\n\t\t} else {\n\t\t\tfor (var i=0; i<msgs.length; i++) {\n\t\t\t\tif (msgs[i].type === 'Inline') {\n\t\t\t\t\teditor.setMessage(msgs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\teditor.render();\n\t};\n\n\t$('#step').click(step);\n\n\t$('#console-button').click(function(e) {\n\t\t$('#canvas').hide();\n\t\t$('#console').show();\n\t});\n\n\t$('#canvas-button').click(function(e) {\n\t\t$('#canvas').show();\n\t\t$('#console').hide();\n\t});\n\t\n\t$('#console-log').click(function(e) {\n\t\trun();\n\t\tvar offset = $('#code')[0].selectionStart;\n\t\tvar code = browser.getCode();\n\t\t$('#code').val(code.insertAtOffset(offset, 'console.log(\"Hi!\");'));\n\t\t$('#code')[0].selectionStart = offset + 12;\n\t\t$('#code')[0].selectionEnd = $('#code')[0].selectionStart + 5;\n\t\trun();\n\t});\n\t\n\t$('#console-clear').click(function(e) {\n\t\trun();\n\t\tvar offset = $('#code')[0].selectionStart;\n\t\tvar code = browser.getCode();\n\t\t$('#code').val(code.insertAtOffset(offset, 'console.clear();'));\n\t\t$('#code')[0].selectionStart = offset + 16;\n\t\t$('#code')[0].selectionEnd = $('#code')[0].selectionStart;\n\t\trun();\n\t});\n\t\n\t$('#console-example').click(function(e) {\n\t\t$('#code').val($('#code').val() + '\\n// Some example code\\nfunction cube(n) {\\n  return n*n*n;\\n}\\n\\nfor (var i=0; i<10; i++) {\\n  var output = cube(i);\\n  console.log(i + \": \" + output);\\n}\\n');\n\t\trun();\n\t});\n\t\n\t$('#extra-compile').click(function(e) {\n\t\tclear();\n\t\tmyConsole.log(browser.getRawCode());\n\t});\n\t\n\t$('#extra-safe').click(function(e) {\n\t\tclear();\n\t\tmyConsole.log(browser.getSafeCode());\n\t});\n\t\n\t$('#extra-tree').click(function(e) {\n\t\tclear();\n\t\twindow.open('https://chart.googleapis.com/chart?cht=gv&chl=' + encodeURIComponent(browser.getDot()));\n\t\tmyConsole.log('\"dot\" string (renderable with Graphviz):\\n');\n\t\tmyConsole.log(browser.getDot());\n\t});\n\t\n\t$('#extra-elements').click(function(e) {\n\t\tclear();\n\t\t\n\t\tmyConsole.log('There may be multiple instances of the same element due to parser behaviour.\\n');\n\t\t\n\t\tfor (var i=0; i<browser.context.elements.length; i++) {\n\t\t\tvar element = browser.context.elements[i];\n\t\t\tmyConsole.log(element.type + ' @ line ' + element.startPos.line);\n\t\t}\n\t\t\n\t\tif (realConsole.log(browser.context)) {\n\t\t\tmyConsole.log('\\nNote: full context has also been printed to browser console.');\n\t\t}\n\t});\n\t\n\t$('#extra-tests').click(function(e) {\n\t\tclear();\n\t\tjsmm.test.runAll();\n\t\tmyConsole.log(jsmm.test.output);\n\t});\n\t\n\tvar stressTime = function(n, f) {\n\t\tvar start = (new Date()).getTime();\n\t\tfor (var i=0; i<n; i++) {\n\t\t\tf();\n\t\t}\n\t\treturn ((new Date()).getTime() - start)/n;\n\t};\n\t\n\t$('#extra-stress').click(function(e) {\n\t\tvar parseAvg = stressTime(200, function() { browser.reset(); browser.parse(); });\n\t\tvar parseGenAvg = stressTime(200, function() { browser.reset(); browser.makeSafeFunc(); });\n\t\tvar runAvg = stressTime(200, function() { browser.runSafe(); });\n\t\tclear();\n\t\tmyConsole.log('Program average parse time: ' + parseAvg + 'ms (out of 200 trials)');\n\t\tmyConsole.log('Program average parse + code generation time: ' + parseGenAvg + 'ms (out of 200 trials)');\n\t\tmyConsole.log('Program average run time: ' + runAvg + 'ms (out of 200 trials)');\n\t\tmyConsole.log();\n\t\tmyConsole.log('Note: the Javascript time function is not completely reliable...');\n\t});\n\t\n\t$('#extra-scope').click(function(e) {\n\t\tclear();\n\t\tif (!browser.isStepping()) {\n\t\t\tmyConsole.log('Not stepping...');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmyConsole.log(JSON.stringify(browser.stack.getLastStackElement().scope, function(key, value) {\n\t\t\tif (typeof value === 'function') {\n\t\t\t\treturn '[Function]';\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}, 2));\n\t\t\n\t\tif (realConsole.log(browser.stack.getLastStackElement().scope)) {\n\t\t\tmyConsole.log('\\nNote: scope has also been printed to browser console.');\n\t\t}\n\t});\n\t\n\t$('#extra-stack').click(function(e) {\n\t\tclear();\n\t\tif (!browser.isStepping()) {\n\t\t\tmyConsole.log('Not stepping...');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tfor (var i=0; i<browser.stack.elements.length; i++) {\n\t\t\tvar element = browser.stack.elements[i].element;\n\t\t\tmyConsole.log(element.type + ' @ line ' + element.startPos.line);\n\t\t}\n\t\t\n\t\tif (realConsole.log(browser.stack)) {\n\t\t\tmyConsole.log('\\nNote: full stack has also been printed to browser console.');\n\t\t}\n\t});\n\t\n\t$('#extra-error').click(function(e) {\n\t\tclear();\n\t\tmyConsole.log(JSON.stringify(browser.getError(), null, 2));\n\t\t\n\t\tif (realConsole.log(browser.getError())) {\n\t\t\tmyConsole.log('\\nNote: error has also been printed to browser console.');\n\t\t}\n\t});\n\n\t$('#extra-ladder').click(function(e) {\n\t\tvar els = browser.getElementsByType('NumberLiteral');\n\t\trealConsole.log(els);\n\t\teditor.makeEditable(els);\n\t});\n\t\n\t$('#about').click(function(e) {\n\t\tclear();\n\t\tmyConsole.log('This is a tool to become a good programmer. The primary objective is to teach programming in an engaging way. It can also give current programmers insights in what it is they are doing.');\n\t\tmyConsole.log();\n\t\tmyConsole.log('The programming language you program in is js--, a subset of Javascript. A lot of things allowed in Javascript are not allowed here, yet it is still quite an expressive language. The intention is to stimulate learning by giving meaningful error messages and sensible operations.');\n\t\tmyConsole.log();\n\t\tmyConsole.log('Most of the interface ideas presented in this and feature prototypes are stolen from Bret Victor. I share his belief that direct interaction and abstraction are very powerful concepts, both in programming and other fields. We should program and teach programming this way.');\n\t\tmyConsole.log();\n\t\tmyConsole.log('This is a first step, mostly to test the compiler, and verify that something like this is possible in the browser. Next on the roadmap are:');\n\t\tmyConsole.log('* drawing on canvas');\n\t\tmyConsole.log('* autocompletion');\n\t\tmyConsole.log('* interactive programs (event handling, time-based)');\n\t\tmyConsole.log('* direct value manipulation');\n\t\tmyConsole.log('* up on the ladder of abstraction!');\n\t\tmyConsole.log();\n\t\tmyConsole.log('If you have any ideas, complaints, or suggestions about this prototype or its wider context, do not hesitate to mail me at me@janpaulposma.nl.');\n\t});\n\n\trun();\n});\n//@ sourceURL=/cli-widget.js"
));
require("/cli-widget.js");
